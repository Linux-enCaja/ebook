Self-organization of Cellular Robots using Random Walk with Simple Rules
Tsuyoshi UEYAMA*, Toshio FUKUDA**



Research works on the self-organization have been performed in several fields attractively. For example, they are (1) the research of the dissipative structures by I. Prigogine [1] in the physical chemistry field, (2) the research of the neural networks [2] and the immunity system [3] in the engineering field, (3) the research of the structure formation in sociology [41 and the dynamics of the population in sociobiology [5], (4) the research of the cell-automaton or the distributed parallel processing in computer science, (5) the research of the synergetic, which includes many fields, by H. Haken [6], (6) Especially, in recent years, the research of the selforganizing robotic system with autonomous distributed robots has been worked in robotics [7 - 11].

Giving the ability of self-organization to a system, it will obtain the abilities of self-adaptivity for environment and self-evolution itself. The self-organizing system must be an autonomous distributed or a multiagents system, an open system, and especially, a flexiblelreconfigurable structure system in a robotic system. The system configured by the autonomous distributed system has the abilities of flexibility and fault tolerance. On the research of the self-organizing system, we must consider the autonomy and distribution of the system, and the cooperation of the interaction among autonomous units.

The CEBOT consists of a large number of autonomous robotic units, which is called a cell. The cell has a simple function. The CEBOT has the ability of the dynamic reconfiguration, so that the structure of both the hardware and the software can be adapted to the given tasks or its environments with the interaction among cells. The
architecture of the CEBOT is consideied as one of the hierarchical self-organizing systems. A cellular module or an organ is organized by the cells. Likewise, a cellular
robot or an individual is made by the cellular modules or the organs. The CEBOT or society is organized by the cellular robots or the individuals. Figure 1 represents the
concept of the CEBOT. 

4.3 Cooperative Behavior
Here we define the cooperative behavior as a behavior of a cell to generate the low value of the structural configuration rate for itself. Since the structural configurations are performed distributively in the system, plural modules are generated simultaneously. It will fall into the condition, in which the modules or cells cannot
configure the reference structure. We call the condition the local minimum for the structural configuration. To avoid this condition, we add an operation that the cell,
which is at the edge of the module, separates from the module in any probability. Since this separation motion refers to the increasing the resource of structural organization for other cells or modules, we consider it as a cooperative behavior. When the cell cannot connect with another cell recognized in the sensing area, each cell separates from the module in the probability, which is defined equation (4). Considering the increase of the structural configuration rate in the system, we adopt the equation (4) for the calculation of the separation probability.

P(t) = P(0) / ( m*e (t/500))

Where P(t) refers to the separate probability at the nh step. "m" refers to the number of cells constructing the module. The step refers to the time of random walk. P(0)
is the initial probability for the separation. This operation is effective to spread the genetic information in the system. 

Then we add an operation of forgetting the genetic information at any low probability to the behavior of the cell, which separates from the module. The forgetting operation is to clear the genetic information from the cell. This operation reduces the conflict rate, where the conflict occurs to the different decisions between the cells or modules. Here the decision refers to the selection of a cell's kind for the structure configuration. In the simulations, the probability of the operation forgetting the genetic information is 0.10.

[1] Nicolis, G. and Prigogine, I. "Self-Organization in Nonequilibrium Systems - From Dissipative Structure to Order through Fluctuation," Jhon Wiley & Sons, Inc., (1977)
[2] Rumelhart, E.D., McClelland, L.J. and The PDP Research Group, "Parallel Distributed Processing," The MIT Press, (1986)
[3] Ishida, Y. "Fully Distributed Diagnosis by PDP Learning Algorithm : Towards Immune Network PDP Model," Proc. of IJCNN 90, Vol. 1, pp.777-782, (1990) 
[4] Hofbauer, J. and Sigmund, K. "The Theory of evolution and dynamical systems," Cambridge Univ. Press, (1988)
[5J French, V., Bryant, P. J. and Bryant, S. V. "Pattern Regulation in Epimorphic Fields," Science, Vol. 193, No. 4257, pp 969-981, (1976).
[6] Haken, H. "Advanced Synergistic : Instability Hierarchies of Self-organizing Systems and Devices," Springer-Verlag Gmbh & Co. KG, (1983)
[7] Fukuda, T. and Nakagawa, S. "A Dynamically Reconfigurable Robotic System (Concept of a system and optimal configurations)," IECON'87, pp. 588-595, (1987)
[8] Fukuda, T. and Nakagawa, S. "Approach to the Dynamically Reconfigurable Robotic System," Journal of Intelligent and Robotic System Vol. 1, Kluwer Academic Publishers, pp. 55-72, (1988)
[9] Fukuda, T., Nakagawa, S., Kawauchi, Y and Buss, M. "Structure Decision Method for Self Organizing Robots based on Cell Structure-CEBOT," Proc. of IEEE Intemational Conference on Robotics and Automation V01.2, pp. 695- 700, (1989)
[10] Ueyama, T., Fukuda, T. and Arai, F. " Structure Configuration using Genetic Algorithm for Cellular Robotic System," Proc. of IEEE International Workshop on Intelligent Robots and Systems (IROS'92), pp. 1542-1549, (1992)
[11] Hackwood, S . and Beni, G. "Self-organization of Sensors for Swarm Intelligence," Proc. of IEEE Intemational Conference on Robotics and Automation, pp.819-829, (1992)
***************************************************************************************************
Self-organization of Hierarchical Structure on Cellular Robotic System
Tsuyoshi UEYAMA" and Toshio FUKUDA**

2. Group Organization and Hierarchical Structure

The organization of decentralized autonomous robotic systems is closely related to the ability of its performance. As an example of the organization of decentralized autonomous systems, we can consider the society of human beings. The architecture of the society depends on both its construction and its purpose dynamically. That is, the architecture of the society is dynamically reconfigured to adapt itself to its resources and its environment. As an example of social organization, an urban self-organization has been simulated by Allen[4], in which a hierarchical organization and group organization have been described.  As the related research on the self-organization, we can see the research on artificial neural networks, such as Hopfield network[5], topological network[6], and so on. We have also presented the structural organization of the cellular robots in dynamic environment, where the cells moved randomly[7]. This simulation has been related to the structural organization of biological systems. On the other hand, social behavior has been discussed from the viewpoint of the coordination in the group[8, 9]. The hierarchical architecture of machine intelligence has been discussed by Saridis, Albus, Meystel and so on[10-12]. The architecture of machine intelligence is organized hierarchically on the basis of the differences of spatial and temporal criterion. 

As the research on the architecture of decentralized autonomous robotic systems, several reports have discussed the configuration of the architecture [13, 14]. From the viewpoint of the evaluation of its configuration, we have reported the mastering method, which refers to a method to determine a master cell in each group, for the network constructed by a number of the cells[15, 16]. In the proposed method, the mastering operation is carried out by the evaluation function called network energy. Yet, the evaluation function is based on the global evaluation of the robotic network. By using the proposed method, we have shown the two layered structure of the network consisting of a number of the cells. The two-layered structure is constructed by several groups of the cells with a master cell.

In this paper, we present an organization method of the hierarchical architecture of the network that consists of a number of autonomous robots or the cells, based on the decentralized evaluation. That is, each cell calculates an evaluation value and determines the group organization in local area. The evaluation function is based on the activity of the cells that is defined by a given task. Figure 2 represents a conceptual figure of the hierarchical structure, where a cell represents an sutonomous robotic unit. This paper considers the temporal differences of the interdependence between the cells to organize groups and the hierarchical structure. This idea relates to the consideration of autonomy of robotic systems, that is, in case of high interdependence between robotslgroups, these robotslgroups should be controlled concentratively. On the other hand, in case of the low interdependence between the robots/groups, these robotslgroups should be allowed to be autonomous and decentralized. In other words, our idea depends on the consideration of time interval concerning the autonomy. Our approach is based on the task that is carried out by the robotic system, therefore, the proposed self-organization of the architecture is clearly different from the self-organization emerged from the initial condition of the system.

[4] P.M.Allen, and M.Sanglier, Urban evolution, selforganization, and decisionmaking, Environment and Planning A (International Journal of Urban and Regional Research), Vo1.13, 167/183, (1981) 
[5] J.J.Hopfield and D.W.Tank, Neural Computation of Decisions in Optimization Problems, Bio. Cybern., Vo1.52, 141/152, (1985)
[6] T.Kohonen, Self-organized formation of topologically correct feature maps, Bio. Cybern., Vo1.43, 59/69, (1982)
[7] T.Ueyama, and T.Fukuda, Self-organization of Cellular Robots Using Random Walk with Simple Rules, Proc. IEEE International Conference on Robotics and Automation, .595/600, (1993) 
[8] N.S.Glance and B.A.Huberman, The Outbreak of Cooperation, Journal of Mathematical Sociology, Vo1.17(4), 281/302, (1993)
[9] C.Numaoka, Collective Alteration of Strategic Types with Delayed Global Information, Proc. IEEE International Conference on IROS, 1077/1084, (1993)
[10] J.S.Albus, Outline for a theory of Intelligence, IEEE Transactins on Systems, Man, and Cybernetics, V01.21, No.3, 473/509, (1991)
[11] G.N.Saridis, Theory of Intelligent Machines, Proc. IEEE Workshop on Intelligent Motion Control, SL-19/30, (1990)
[12] A.Maximov, and A.Meyste1, Optimum Design of multiresolutional Hierarchical Control Systems, Proc. of IEEE International Symposium on Intelligent Control, 514/520, (1992)
[13] F.R.Noreils, An Architecture for Cooperative and Autonomous Mobile Robots, Proc. IEEE International Conference on Robotics and Automation, 2703/27 10, (1992)
[14] S.Bagchi, and K.Kawamura, An Architecture of a Distributed Object-Oriented Robotic System, Proc. IEEE International Conference on IROS, 71 1/716, (1992)
[15] T.Fukuda, T.Ueyama, and F.Arai, Control Strategy for a Network of Cellular Robots - Determination of a Master Cell for Cellular Robotic Network based on a Potential Energy -, hoc. of IEEE International Conference on Robotics and Automation, 1616/1621, (1991)
[16] T.Ueyama, T.Fukuda, and F.Arai, Configuration of Communication Structure for Distributed Intelligent Robotic System - Evaluation of the organization of Cellular Robotic System as Group Robotic System -, Proc. of IEEE International Conference on Robotics and Automation, 807/812, (1992)
***************************************************************************************************
Self-organization Strategies for Dynamic Context Coverage in Capability-Constrained Mobile Sensor Networks
Shiow-yang Wu, Chao-Hong Liu, Chen-Kuang Tzeng

Definition 8 (Coverage)
For a context field F, a connected sensor network S and a subset P of the k contexts, the percentage of context nodes in F of types in P that are covered by the nodes in S is called the context coverage of F on P (denoted by C p (F)). When P is the set of all contexts, it is called the coverage of F (denoted by C(F)).


Definition 9 (Problem Definition)
For a context field F, a set of sensor nodes S, k contexts and a desired level of coverage g, the dynamic context coverage problem is to continuously form a connected sensor network such that C(F) >= g. 

The problem is challenging in several respects. Technically, to cover multiple contexts significantly complicates the problem since the sensor nodes need to strike for optimal balance. Furthermore, sensors are heterogeneous, mobile and capability-constrained. Existing solutions that assume homogeneous, static sensors and consider only communication radiuses can no longer be applied. The nodes must self-organize into a connected sensor network and continuously maintain the coverage. When all contexts remain unchanged, the sensors must stabilize themselves for energy efficiency. Theoretically, we want to determine the optimal coverage a set of sensor nodes can achieve, or the minimal number of nodes to reach a desired level of coverage. We also want to prove that, given a protocol, whether it will eventually stabilize if the contexts remain unchanged. For algorithm comparison, we want to know which one is more competitive in terms of context coverage, responsiveness, energy consumption and sensor topology. In this paper, we discuss our strategies and algorithms to quickly form a connected sensor network, achieve the desired level of coverage and continuously maintain the coverage.

4. Strategies and Algorithms
We devise three self-organization strategies and design several algorithms accordingly. We then build a simulation system which plot the sensor movement such that the network could be visualized. We present the strategies and algorithms in this section.

4.1. Algorithms based on Randomization
In randomization based strategy, sensor nodes move in random with context-sensitive control. The algorithm context-sensitive random walk method (CSRWM) is presented in Algorithm 1. Each node randomly choose the direction and speed of movement based on limited information from neighbors and the context reading. This is the simplest algorithm used as the base line for comparison. 

Algorithm 1: Context-Sensitive Random Walk Method  (CSRWM)

Data: N is the sensor node in question.
Result: The new location of N.
if (there is any neighbor lies within the sensing radiuses of N ) V ( N has no reading) then
	e <=  a random number within 0 and 1
	V <=  a random unit vector
	N.x <= N.x + e x N.d X V
end

The algorithm simulated annealing method (SAM) presented in Algorithm 2 is CSRWM augmented with a contextsensitive temperature to speedup or slow down the random walk. The higher the temperature, the more active the sensor nodes which are more likely to spread toward uncovered areas but less likely to stabilize. Theoretically, if we start with a high temperature and gradually decrease it in a slow enough pace, then the sensor network will eventually reach an optimal stable state if all contexts remain unchanged.

4.2. Algorithms based on Virtual Forces
In virtual forces based strategy, we model either the context readings or the variations with respect to neighboring nodes as virtual forces. By combining all the forces affecting a sensor node, we can obtain a net force to drive the sensor node toward its ideal location. Theoretically, if the contexts remain unchange, the sensor network will eventually stabilize. Algorithms based on virtual forces are naturally self-organized. We have designed two algorithms based on virtual forces: the subjection method (SM) and the collision/dzffiion method (CDM) . 

SM is based on distance function (geographical distance, context distance, etc.) to determine the force. Attraction force is useful in healing the uncovered breaches while  repulsion force is good for expanding the coverage to previously unattended area. Two forces can be combined to define a function of subjection force against virtual distance as the example in Figure 1. The circles denote the sensing radiuses. The difference in context readings (d,,,t,,t) is used to determine inter-subjection. (b) demonstrates the state of zero subjection. The subjection can become negative for repulsion force as in (c). It is permissible for different sensor nodes to use different distance functions. Details of the SM is presented in Algorithm 3. 

CDM is to simulate the interaction among particles. Each sensor node is treated as a particle with its context readings as its size. Figure 2(a) and (b) demonstrate the collision effect. We introduce a friction effect to eventually stabilize the sensors, as shown in (c), which is also used to model the diminishing effect of diffusion. Algorithm 4 describes the procedure CDM.

4.3. Algorithm based on Spatial Information
This strategy exploits relative spatial relationships of neighboring sensors to determine the right position of a node. We have designed the tre~zchingm ethod (TM) based on spatial information. Each sensor calculates the position that it should move to based on its relationships with neighbors, and thereby establishing the best local topology (in terms of coverage). The key is to define a quality measure (the trench) to derive the most appropriate relative positions of two nodes, as shown in Figure 3. The quality measure can be any thing varies with context distance such as the communication quality or coverage level. In general, the most appropriate distance is the point before the drastically dropping of quality or the minimal acceptable QoS to have the broadest coverage. Figure 4(a) demonstrates an example of a quality measure. Node nl is expected to move to the preferred distance of n 2 . (b) shows a more generalized case where node nl is affected by three neighbors. The best position is the deepest location that meets all neighbors' expectations as much as possible. TM (Algorithm 5) is very general and flexible since any reasonable quality measure can be adopted. By using different measures, we can employ different strategies based on the same algorithm.
***************************************************************************************************
Self-Organizing Sensor Networks for Integrated Target Surveillance
Pratik K. Biswas, Shashi Phoha

3 SENSOR NETWORK SELF-ORGANIZATION

Self-organization refers to the ability of a system to achieve the necessary organizational formations without requiring any external intervention or supervision. Self-organizing sensor networks may be built from a large number of sensor nodes that may be deployed spontaneously and randomly, but can assemble themselves into an impromptu network, be aware of their own capabilities and their environment, optimize their own resource usage, dynamically adapt to device failure and degradation, manage their own movements, react to the changes in task and network requirements, and cooperate to solve problems, without any appreciable centralized management [13], [14], [15]. Selforganization in sensor networks may be analyzed from the following node characteristics:

	Autonomy—Sensor nodes may be able to act independently and assume specific roles.
	Self-discovery—Sensor nodes may be able to discover their environment and localize themselves with minimal use of GPS beacon nodes.
	Self-configuration—Sensor nodes may be able to configure their own states to ensure coverage and connectivity and maximize network lifetime.
	Communication—Sensor nodes may be able to exchange information with other nodes.
	Mobility—Sensor nodes may be able to move in a predetermined fashion or at their own discretion. Accordingly, nodes can be static or mobile.
	Clustering—Sensor nodes may form hierarchical or ad hoc clusters to minimize redundancy and cooperate toward a common goal.
	Fault Tolerance—Sensor nodes may be able to cope with device failure and degradation, through adaptation and/or redundancy (availability), enabling the network to resume and 		maintain normal operation.

These characteristics often contribute, all together or in some combination, toward creating self-organizing sensor networks. Self-organization in sensor networks is established to enable and/or enhance: 

1. basic sensing,
2. resource and energy management,
3. communications,
4. cooperative signal processing,
5. redundancy and recovery, and
6. network lifetime.

Accordingly, we can define self-organization of a sensor network in the following way:

Definition 3.1. Self-organization of a sensor network is an evolutionary process, where the attributes (information, energy, resources, redundancy, lifetime, topology, etc.) and capabilities (sensing, localization, configuration, communication, mobility, recovery, adaptation, etc.) of the network are spontaneously enhanced, through autonomous management of  the inherent characteristics (described above) of the constituent sensor nodes. 

AESOP consists of the following four phases, each utilizing one or more algorithms, described briefly in Section 2:

1. Self-awareness: This phase consists of initialization, communication, and node localization. Upon power-up, the network will run a discovery routine, whereby nodes will exchange messages to establish their local neighborhood and estimate their own locations based on the positions of their static neighbors. The algorithm [19] assumes the presence of a number of nodes, with GPS capabilities, whose locations are accurately known. Each node’s location estimate is modeled as a rectangle. It uses connectivity-induced constraints to localize a node and exploits nonneighbor  (neighbor of a neighbor) relationships to improve on the accuracy of the location estimation. 

2. Self-reconfiguration: This phase consists of scanning, communication, and resource/energy management prior to the actual arrival/detection of the target. Specifically, it tries to ensure that the network deploys the minimal number of nodes to provide the same coverage and connectivity of the surveillance area as the original deployment, by switching off the redundant nodes with full overlapping coverage. The algorithm [20] for state reconfiguration (CCANS) runs in two stages: The first one is used for each node’s sensing coverage evaluation,while the second is used for node-state reevaluation and connectivity checking for the overall network. It employs a token exchange mechanism between any pair of neighbors to loop through the network as each node calculates/recalculates its coverage redundancy and ensures node connectivity. Consequently, some nodes reconfigure their states to active while others are set to inactive/sleeping. This phase may give us an energy-efficient configuration for scanning with possible fault tolerance (if there were coverage redundancy in the original deployment), but does not necessarily guarantee that this would be a better configuration for tracking when the target follows a certain trajectory. We need this phase to maximize the lifetime of the network. 

3. Self-repositioning: This phase consists of scanning, role-playing, communication, and mobility during actual target surveillance. Specifically, it demonstrates node mobility as a trade-off between surveillance and communication tasks when a target follows a preconceived (training pattern) or an evolving trajectory. Some nodes, close to the track, act as source nodes emitting target information, which gets transmitted through a host of intermediate relay nodes (active nodes from the previous phase) to a more powerful node, assuming the role of a sink node or a base station. During this process, as  the origin of communication moves from one source node to the next, some of these intermediate relay nodes reposition themselves to achieve an energyefficient configuration, vis-a`-vis the training/evolving path. The algorithm [21], [22] uses a distributed version of simulated annealing. A node moves either when the sum of power consumption at the new position and the moving cost (power required for movement) is less than the power consumption at the old position or when the probability of acceptance (as being globally successful) of the move, based on the local power loss, is greater than a uniformly generated random number. As the local power loss increases with time, the freedom to move is effectively diminished. If the optimization is successful, the final solution will be a global minimum.

4. Self-adaptation: This phase consists of network stabilization, network adaptation, node localization (learning), and self-healing (if necessary). Specifically, node mobility comes to a halt, reaching a stable and optimal (ideally) configuration, mobile nodes adapt to their new environment (neighborhoods) by adjusting the location estimation algorithm (network/node behavior of phase 1) to account for their mobility (phase 3) and then use this modified algorithm to learn their new positions. This phase may also contain self-healing. If a node dies because of mobility  or if the coverage is severely broken by node mobility in the previous phase, then the network will adapt the state reconfiguration algorithm (of phase 2) and switch on the nearest inactive/sleeping node(s) (from phase 2) to replace the dead node and/or resume coverage. Likewise, if there is complete overlap of coverage due to mobility, then redundant nodes are sent to sleep (inactivated).

[19] N. Sundaram and P. Ramanathan, “Connectivity Based Location Estimation Scheme for Wireless Ad hoc Networks,” Proc. Globecom, vol. 1, pp. 143-147, Nov. 2002. 
[20] Y. Zou and K. Chakrabarty, “A Distributed Coverage- and Connectivity-Centric Technique for Selecting Active Nodes in Wireless Sensor Networks,” IEEE Trans. Computers, vol. 54,pp. 978-991, Aug. 2005.
[21] R. Rao and G. Kesidis, “Purposeful Mobility for Relaying and Surveillance in Mobile Ad-Hoc Sensor Networks,” IEEE Trans. Mobile Computing, vol. 3, no. 3, pp. 225-232, July-Sept. 2004.
[22] G. Kesidis and E. Wong, “Optimal Acceptance Probability for Simulated Annealing,” Stochastics and Stochastics Reports, vol. 29, pp. 221-226, 1990.
***************************************************************************************************
2006 IEEE Congress on Evolutionary Computation
Sheraton Vancouver Wall Centre Hotel, Vancouver, BC, Canada
July 16-21, 2006

Swarm Intelligence for the Self-Organization of Wireless Sensor Network 
Wang Rui, Liang Yan, Ye Gangqiang, Lu Chaoxia, and Pan Quan

 In wireless sensor networks (WSN), it is a fundamental issue to balance two conflicted performance indexes: sensing ability and energy cost, via the self-organization (SO). Here each sensor node in the WSN is mapped to an ant in ant colony system and node communication information is modeled by the current pheromone. The SO problem of the WSN is transformed to the swarm intelligence optimization problem of ant colony. If an ant detects an interested target, it will lay pheromone, which can diffuse in its neighbor zone. The accumulated pheromone is calculated to adaptively and distributively determine the waking probability of the ant so that the self organization of the WSN can be implemented automatically. Hence a new swarm intelligence method for the SO of WSN is proposed. The simulations show the effectiveness of our method.

***************************************************************************************************























































































































