\chapter{Metodología Para la Enseñanza de Sistemas Embebidos}
\label{ch:education}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%                   INTRODUCCION                                       %%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Introducción}

La disponibilidad de personal calificado que absorba, asimile y aplique los conocimientos asociados a una tecnología es, a nuestro modo de ver, el punto más importante en el proceso de transferencia tecnológica; como observamos anteriormente, los canales tradicionales de transferencia han demostrado ser poco efectivos en el área bajo estudio; podemos concluir sin temor a equivocarnos que la causa principal del atraso de la industria electrónica (relacionada con el diseño digital) es la poca oferta de personal calificado que permita generar un cambio y pasar de importadores a generadores de soluciones.

Analizando el caso del Departamento de Ingeniería Eléctrica y Electrónica (DIEE) de la Universidad Nacional de Colombia, obervamos que los estudiantes son muy hábiles para analizar y para aplicar sus conocimientos en la solución a problemas académicos; sin embargo, la mayoría presenta una gran dificultad al momento de implementar físicamente estas soluciones; esto, porque en la mayoría de las asignaturas no se llega a este punto ya que el proceso termina en la simulación. La falta de contacto de muchos docentes con la industria hace que los programas de estas asignaturas no incluyan como parte de la metodología la experimentación práctica; algunos docentes argumentan que la implementación práctica no es labor de un ingeniero y por esta razón ignoran este proceso; aunque esta opinión es respetable, a nuestro modo de ver, en un país como Colombia donde no existe una oferta considerable de bienes y servicios relacionados con el diseño de sistemas electrónicos (comparado con países de la región) se le deben proporcionar al estudiante las herramientas necesarias para innovar y crear nuevos productos que den solución precisa a problemas locales. La falta de contacto por parte de los estudiantes a la solución de problemas reales origina una desconfianza por parte de la industria hacia los poductos generados localmente.

Es importante que los estudiantes utilicen herramientas adecuadas cuando se enfrentan a la implementación física. Hasta hace poco en el DIEE se encontraban trabajos de grado que utilizaban placas de prototipos; se proporcionaban soluciones basadas en herramientas comerciales las cuales eran conseguidas de forma ilegal o se utilizaban demos. Este tipo de soluciones están muy lejos de una solución comercial real, primero por que no proporciona una plataforma física robusta y segundo porque es encesario adquirir software muy costoso. Adicionalmente, no es ético utilizar herramientas comerciales en la enseñanza si no se cuentan con las licencias necesarias; es muy común ignorar este tipo de violaciones a los derechos de autor cuando se trabaja en aplicaciones académicas, aunque el fin del uso sea muy loable no deja de ser ilegal; por esta razón, una de las premisas de nuestra metodología de enseñanza será el uso de herramientas abiertas que produzcan resultados comparables con las herramientas comerciales.

La metodología que proponemos adopta los conocimientos generados en el proceso de transferencia descrito en el capítulo \ref{ch:embedded} y se constituye en su aplicación a la academia, con esto esperamos que los estudiantes tomen conciencia de la importancia del uso de esta tecnología y utilicen esta información para crear productos novedosos que den solución a problemas locales. El contenido del curso y metodología se ajustará a la iniciativa CDIO. El Departamento de Ingeniería Eléctrica y Electrónica de la Universidad Nacional de Colombia está realizando el proceso de adaptar la Iniciativa CDIO a su programa académico, y en la mayoría de las asignaturas no se contemplan acitividades que ayuden a mejorar las habilidades en la implementación de sistemas, lo que confirma una vez más que la falta de docentes con experiencia en la industria afecta la generación de habilidades necesarias para crear nuevos productos. 



\subsection{Objetivos de la iniciativa CDIO}

La iniciativa CDIO \footnote{http://www.cdio.org} ha sido desarrollada por el MIT con ayuda de academicos, industriales, ingenieros y estudiantes\cite {WCI} como respuesta a los caminos diferentes que están tomando la educación de la ingeniería y las demandas del mundo real \footnote{lo que se aplica perfectamemente al estado de la industria electrónica (y a otras industrias) en Colombia, donde la enseñanza en ingeniería se queda a medio camino y no se hace implementantación física.} Esta iniciativa ha sido adoptada por un creciente número de instituciones académicas a lo largo del mundo. Hacer parte de este esfuerzo mundial nos ayuda a mantener nuestros planes académicos actualizados con los cambios que se realizan en países más industrializados. En este capítulo mostraremos como esta iniciativa se adapta perfectamemente a la metodología propuesta en este trabajo ya que adiciona dos componentes importantísimos para la aplicación de la tecnología en la creación de nuevos productos: la implementación y la operación. 

La iniciativa CDIO se basa en la suposición de que los egresados de los centros de formación en ingeniería deben ser capaces de: \textbf{C}oncebir, \textbf{D}iseñar, \textbf{I}mplementar y \textbf{O}perar sistemas funcionales en el mundo real. Como mencionamos anteriormente, en Colombia, la mayoría de los centros de formación solo tienen en cuenta la concepción y el diseño, descuidando por completo la implementación y la operación, esto, impide que se generen las habilidades necesarias tenga una estrecha relación con la industria, la cual, requiere productos que pueda comercializar o soluciones a sus necesidades. La frase \textit{en el mundo real} resalta la importancia de trabajar en la solución de problemas que pueden encontrarse en el ejercicio profesional, lo que es muy difícil de determinar cuando los docentes no han tenido contacto con el mundo real. La iniciativa CDIO se enfoca en preparar a los estudiantes con los conocimientos habilidades y aptitudes para ser ingenieros líder; y sus principales objetivos son: \cite {WCI}:

\begin{itemize}
 \item Educar a los estudiantes para dominar un conocimiento más profundo de los fundamentos técnicos.
 \item Educar a los ingenieros para liderar la creación y operación de nuevos productos y sistemas.
 \item Educar futuros investigadores para entender la importancia estratégica y el valor de su trabajo.
\end{itemize}

Estos objetivos se adaptan a los requerimientos que se exige a la plataforma tecnológica de un país para que pueda realizar una adecuada absorción del conocimiento transferido para posteriormente transformar ese conocimiento en nuevos productos adaptados a las necesidades del país. Las premisas que capturan la visión, objetivos y fundamentos pedagógicos de la iniciativa son:

\begin{itemize}
 \item Es posible cumplir las necesidades propias de la profesión mientras se realiza el proceso de concebir, diseñar, implementar y operar sistemas en el contexto de los sistemas de ingeniería. 
 \item Los resultados de la formación deben ser fijados por los sectores interesados (academia, industria, gobierno) y deben formar una secuencia de experiencias de aprendizaje, algunas de las cuales son experimentales, es decir, deben enfrentar a los estudiantes a situaciones que encontrarán en el ejercicio de su profesión.
 \item La adecuada construcción de esta cadena de actividades tendrán un doble impacto en la formación de los estudiantes, por un lado facilitará el aprendizaje de habilidades críticas e inter-personales y fortalecerá las habilidades de construcción de sistemas, productos y procesos, mientras se mejora el aprendizaje de los conceptos fundamentales.
\end{itemize}

\subsubsection{Emprendimiento y liderazgo}

La situación actual por la que atraviesa la Industria electrónica nacional, requiere que los profesionales en el área tengan las capacidades de emprendimiento y liderazgo necesarias para la creación de nuevas empresas o para la creación de nuevos productos, la Figura \ref{cdio_emp_lid} muestra la relación entre emprendimiento \footnote{El concepto clásico de emprendimiento involucra el re-direccionamiento y movilización de capital y recursos humanos para crear una nueva actividad económica; actualmente, el emprendimiento esta asociado a la creación de una nueva empresa con una nueva línea de negocios.}, liderazgo y las habilidades CDIO. 

\begin{figure}[H]
  \begin{center} \includegraphics[scale=.6]{./images/CDIO_emp_lid.png} \end{center}
  \caption{} fuente:\cite{ECJM+09} \label{cdio_emp_lid}
\end{figure}

\subsection{Estructura del plan de estudios CDIO}
La figura \ref{cdio_blocks} muestra los bloques constructores del plan de estudios CDIO, en el primer nivel podemos observar que todo individuo interesado en obtener habilidades técnicas posee \textit{habilidades personales y profesionales}, las cuales son fundamentales para la práctica. Para se capaces de desarrollar sistemas complejos en ingeniería, los estudiantes deben dominar los fundamentos del \textit{razonamiento y conocimiento técnico}; para trabajar en un entorno moderno basado en grupos de trabajo los estudiantes deben desarrollar \textit{habilidades interpersonales} de comunicación y trabajo en equipo; finalmente para ser capaz de crear y operar productos y sistemas un estudiante debe entender el concepto de \textit{concebir, diseñar, implementar y operar sistemas en el Contexto social y empresarial}\cite{EFC01}

\begin{figure}[H]
  \begin{center} \includegraphics[scale=.8]{./images/CDIO.png} \end{center}
  \caption{Bloques constructores de conocimiento, habilidades y actitudes necesarias para concebir, diseñar, implementar y operar sistemas en el contexto social y empresarial} fuente:\cite{EFC01} \label{cdio_blocks}
\end{figure}


\subsubsection{Nivel 1: Razonamiento y conocimiento técnico}
Los componentes del primer nivel \textit{razonamiento y conocimiento técnico} son comúnes a los planes de estudio de las ingenierías modernas y son:

\begin{enumerate}
 \item Fundamentos avanzados de ingeniería.
 \item Fundamentos del núcleo de ingeniería.
 \item Conocimiento científico.
\end{enumerate}

La razón de colocar este bloque constructor en el primer nivel es solo para recordar que el objetivo primordial de cualquier programa de pregrado es el desarrollo de un conocimiento profundo de fundamentos técnicos. En este trabajo no se cambiará este componente ya que para hacerlo es necesario un consenso con las demás carreras de la facultad de ingeniería, labor que puede tomar varios años.

\subsubsection{Habilidades personales, profesionales e interpersonales}

Los niveles 2 y 3 se centran en las habilidades personales que debe poseer un individo para que pueda cumplir con el objetivo de la iniciativa CDIO. El nivel 2 esta compuesto por: 

\begin{enumerate}
 \item Las habilidades profesionales que representan las tres formas de pensar más practicadas por los ingenieros: resolución de problemas; descubrimiento de conocimiento y pensamiento sistémico.
 \item Actitudes que incluyen integridad y comportamiento profesional así como las necesarias para planear la profesión.
\end{enumerate}

Las habilidades que no hacen parte del contexto profesional ni del inter-personal son llamadas \textit{habilidades y actitudes personales}, incluyen el carácter; iniciativa; perseverancia; formas de pensar más genéricas como pensamiento crítico, creativo; y habilidades propias como curiosidad, aprendizaje continuo y manejo del tiempo.

Las habilidades inter-personales, son un subconjunto de las habilidades personales y se dividen en dos grupos (que se traslapan) llamados: equipo de trabajo y comunicaciones. El equipo de trabajo hace referencia a las habilidades necesarias para formar, operar, fortalecer y liderar un equipo con habilidades específicas de un equipo de trabajo técnico. La comunicación se compone de habilidades para idear estrategias de comunicación y aquellas que utilizan los medios orales, escritos, electrónicos y gráficos y en el caso colombiano el uso del idioma Inglés. La Figura \ref{cdio_2_3} muestra  la relación entre las habilidades de nivel 2 (personales y profesionales) y nivel 3 (interpersonales). 

\begin{figure}
  \begin{center} \includegraphics[scale=.8]{./images/CDIO_2_3.png} \end{center}
  \caption{Relación entre las habilidades personales, profesionales e interpersonales} fuente:\cite{EFC01} \label{cdio_2_3}
\end{figure}


\subsubsection{Habiidades CDIO}
Habilidades necesarias parea concebir, diseñar, implementar y operar sistemas en el contexto social y empresarial; estos cuatro componentes son necesarios para que los egresados de las carreras de ingeniería eléctrica y electrónica sean capaces de absorber los conocimientos que las nuevas tecnologías proporcionan, adaptarlos a la situación tecnológica y al contexto social del país para generar productos que resuelvan necesidades locales. Para satisfacer una necesidad de la sociedad es necesario conocer la dinámica empresarial, los principios que la rigen y como se debe actuar en una empresa de cualquier tipo y tamaño.

\subsection{Implementación del Plan de Estudios CDIO}
La Figura \ref{impl_CDIO} muestra los componentes que deben ser especificados para implementar el plan de estudios CDIO al currículo de las asignaturas del área de electrónica digital; en primer lugar se encuentran los resultados esperados del proceso de aprendizaje, esto es, ¿Qué deben saber y qué deben ser capaces de hacer los estudiantes al final del curso? Para contestar a esta pregunta es necesario definir las \textbf{habilidades} que serán reforzadas o desarrolladas y los \textit{objetivos} de cada asignatura. 

\begin{figure}[H]
  \begin{center} \includegraphics[scale=.6]{./images/CDIO_metodologia.png} \end{center}
  \caption{Objetivos, actividades, y evaluación: } \label{impl_CDIO}
\end{figure}


Para alcanzar los objetivos definidos en el primer paso, es necesario generar una serie de \textbf{actividades} que le permitan al estudiante retener nuevos conocimientos y habilidades y desarrollar las competencias deseadas; el número de actividades debe ser tal que cubran todas las habilidades que se quieran desarrollar o reforzar. Finalmente, se deben desarrollar métodos de evaluación que permitan conocer el nivel de competencia de los estudiantes, y de esta forma ajustar las actividades para obtener los resultados esperados.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%      IDENTIFICACION DE HABILIDADES CDIO                              %%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Definición e Identificación de las Habilidades CDIO}

El primer paso en la implementación del plan de estudios CDIO es definir e identificar las habilidades requeridas en una determinada área del plan de estudios, en este caso en las asignaturas del área de electrónica digital. En el DIEE de la UNAL el área de electrónica digital esta compuesta por tres asignaturas para la carrera de ingeniería electrónica: Electrónica Digital 1, Electrónica Digital 2 y Sistemas Embebidos; para la carrera de ingeniería eléctrica está compuesta por Electrónica Digital 1 (la misma en las dos carreras) únicamente.

\subsection{Introducir, Enseñar y Usar}
Para transladar esta lista de habilidades a objetivos de aprendizaje es necesario determinar el grado de competencia que se espera que el profesional adquiera en cada una de las asignaturas; por supuesto, algunas de estas habilidades no pueden obtenerse solo en una asignatura y es necesario que todo el plan académico contribuya a generarla, lo que requiere un consenso del personal académico. Los niveles de competencia seleccionados para indicar el grado en que debe ser apropiada una determinada habilidad son:

\begin{enumerate}
 \item Introducir: Introduce pero no evalúa.
 \item Enseñar: Enseña y evalúa.
 \item Utilizar: Utiliza, puede ser evaluado o no.
\end{enumerate}

\subsection{Habilidades CDIO}
A continuación se listan las habilidades CDIO que deben desarrollarse o reforzarse en el área de electrónica digital, algunas de las habilidades como la comunicación oral y escrita en inglés es común a la mayoría de las asignaturas, mientras que otras como la integración software - hardware es exclusiva de esta línea.

%Redefine the first level
\renewcommand{\theenumi}{\arabic{enumi}}
\renewcommand{\labelenumi}{\theenumi}
 
%Redefine the second level
\renewcommand{\theenumii}{\arabic{enumii}}
\renewcommand{\labelenumii}{\theenumii}

\begin{enumerate}
  \setcounter{enumi}{1}
%  CDIO NIVEL 2
  \item \textbf{Aptitudes personales y profesionales}
    \begin{enumerate}
      \item Razonamiento analítico y resolución de problemas
        \begin{enumerate}
         \item Identificación y formulación del problema.
         \item Modelamiento.
         \item Solución y recomendación.
        \end{enumerate}
      \item Experimentación investigación y descubrimiento de conocimiento
        \begin{enumerate}
         \item Formulación de hipótesis.
         \item Investigación experimental.
        \end{enumerate}
      \item Pensamiento sistemático
        \begin{enumerate}
         \item Pensamiento global.
         \item Surgimiento e interacciones.
        \end{enumerate}
      \item Pensamiento crítico y creativo y habilidades y actitudes personales 
        \begin{enumerate}
         \item  Pensamiento creativo.
         \item  Pensamiento crítico.
         \item  Toma de conciencia de conocimientos propios y metaconocimiento.
         \item  Aprendizaje permanente y educar a otros.
        \end{enumerate}
      \item Ética, responsabilidad profesional, equidad y otros valores personales. 
        \begin{enumerate}
         \item Ética, integridad y responsabilidad social.
         \item Comportamiento profesional y responsabilidad.
         \item Confianza y lealtad.
        \end{enumerate}
    \end{enumerate}

Las aptitudes personales y profesionales que se desean resaltar en esta metdología son: 
\begin{itemize}
 \item Pensamiento sistemático: Los conocimientos adquiridos en esta asignatura son utilizados para contribuir a una solucion a un problema de la sociedad. Esta contribución está representada en un sistema digital que utiliza tecnología de punta y para su elaboración se aplicó una metodología de diseño que optimiza recursos económicos proporcionando la funcionalidad requerida. 
 \item Toma de conciencia de conocimientos propios: El estudiante es el responsable de adquirir el conocimiento con la guía del profesor; por lo tanto, debe ser capaz de identificar temas que no ha asimilado completamente y debe realizar actividades que ayuden en la asimilación de nuevos conocimientos.
 \item Aprendizaje permanente y educar a otros: El aprendizaje debe ser visto por el estudiante como un proceso continuo que no termina al momento de presentar las evaluaciones, o al finalizar los ciclos de formación; la metodología en estos cursos debe forzar al estudiante a buscar fuentes de información para mejorar la asimilación de conocimientos. El trabajo en equipo ayuda a que esta búsqueda sea compartida, de tal forma que el aprendizaje sea colectivo.
\end{itemize}

 Estas habilidads le permitirán al futuro profesional asimilar cambios en las tecnologías, aplicando técnicas de auto-aprendizaje, lo que hace innecesario que un profesional se vea obligado a tomar cursos de extensión para entender un cambio o una nueva característica de la tecnología que utiliza. A nuestro modo de ver los ingenieros deben estar en la capacidad de adaptarse a estos cambios por si mismos.

%  CDIO NIVEL 3
  \item \textbf{Habilidades interpersonales, trabajo en equipo y comunicación}

    \begin{enumerate}
     \item Equipo de trabajo
        \begin{enumerate}
          \item Formar grupos efectivos.
          \item Equipo de liderazgo.
          \item Equipo técnico y multi-disciplinario.
        \end{enumerate}
     \item Comunicaciones estructuradas
        \begin{enumerate}
          \item Estrategia de comunicación.
          \item Estructura de la comunicación.
          \item Comunicación escrita.
          \item Comunicación electrónica.
          \item Presentación oral.
        \end{enumerate}
     \item Comunicación en idioma extranjero 
        \begin{enumerate}
          \item Inglés.
        \end{enumerate}
     \item Comunicaciones informales: Relacionarse con los demás
        \begin{enumerate}
          \item Preguntar, escuchar y dialogar.
          \item Negociación, compromiso y resolución de conflictos.
          \item Establecimiento de conexiones.
        \end{enumerate}    
  \end{enumerate}

Con las habilidades interpersonales se busca formar profesionales que puedan formar grupos de trabajo eficientes, identificando su papel dentro del mismo, facilitando el desarrollo de las actividades de los demás miembros y buscar soluciones conjuntas al problema a resolver y a problemas que surjan del desarrollo del proyecto. Esto es muy importante para el desarrollo de dispositivos digitales, ya que para su elaboración intervienen profesionales de diferentes áreas: diseñadores industriales, programadores, desarrolladores de hardware, personal de mercadeo, ventas y soporte. Por esto, es de suma importancia aprender a utilizar las diferentes formas de comunicación identificando cual es la más eficiente en un determinado caso; el uso de plataformas que permita a miembros de un equipo que se encuentran en diferentes puntos geográficos intercambiar información y discutir temas propios del diseño simplifica el trabajo y ahorra tiempo y dinero.

Por otro lado, es importante que el estudiante adquiera habilidades que le permitan documentar de forma adecuada los procesos de diseño y que el material que desarrolle pueda ser utilizado por otros miembros del equipo de forma rápida; pora esto, es importante utilizar herramientas que faciliten la generación de documentos que permitan el acceso a múltiples usuarios.

Las comunicaciones informales son la mayor fuente de información en los proyectos abiertos, usuarios con un determinado problema escriben a una lista de correo o a canales \textit{irc} (internet relay chat)\footnote{protocolo de comunicaciones en tiempo real basado en texto, permite conversaciones entre un grupo de personas; todos los usuarios que se encuentran en un canal pueden comunicarse entre sí} que tiene como miembros a usuarios más avanzados que pueden contestar todo tipo de preguntas, y al mismo tiempo proporcionan una base de datos con todas las comunicaciones anteriores permitiendo la búsqueda de conversaciones relacionadas con un problema determinado. Estas listas de correo y canales irc también pueden ser utilizados para establecer relaciones profesionales que pueden terminar en nuevos proyectos, ofertas de empleo o colaboración.


%  CDIO NIVEL 4
  \item \textbf{Concebir, diseñar, implementar y operar sistemas en el contexto social y empresarial}
    \begin{enumerate}
     \item Contexto externo, social, económico y ambiental
        \begin{enumerate}
          \item Rol y responsabilidad de los ingenieros.
          \item Impacto sobre la sociedad  y el medio ambiente.
          \item Cuestiones y valores actuales.
          \item Sostenibilidad y necesidad de un desarrollo sostenible.
        \end{enumerate}
     \item Empresa y contexto empresarial
        \begin{enumerate}
          \item Interesados en la empresa, metas y objetivos.
          \item Espíritu empresarial técnico.
          \item Trabajo en organizaciones.
          \item Finanzas y economía de los proyectos de ingeniería
        \end{enumerate}
     \item Concepción y administración de sistemas en ingeniería.
        \begin{enumerate}
          \item Entender las necesidades y establecer las metas.
          \item Definir la función, concepto y arquitectura.
        \end{enumerate}
     \item Diseño
        \begin{enumerate}
          \item Proceso de Diseño.
          \item Fases del proceso de Diseño y enfoques.
          \item Utilización de conocimiento científico en el diseño.
          \item Diseño específico.
          \item Diseño multi-disciplinario.
        \end{enumerate}
     \item Implementación
        \begin{enumerate}
          \item Proceso de fabricación hardware.
          \item Proceso de Implementación de software.
          \item Integración software - hardware.
          \item Pruebas, verificación, validación y certificación.
        \end{enumerate}
     \item Liderar esfuerzos en ingeniería 
        \begin{enumerate}
          \item Pensar creativamente e imaginar posibilidades.
          \item Definir la solución.
          \item Crear nuevas formas de solución.
          \item Construir y liderar una organización y una organización extendida.
          \item Planear y administrar un proyecto hasta su finalización.
          \item Innovar - la concepción, diseño e introducción de nuevos bienes y servicios.
          \item Innovar - el desarrollo de nuevos dispositivos, materiales o procesos que permitan nuevos bienes y servicios.
        \end{enumerate}
     \item Emprendimiento en ingeniería
        \begin{enumerate}
          \item Creación, formulación y organización de una empresa.
          \item Desarrollo del plan de negocios.
          \item Finanzas y capitalización.
          \item Mercadeo de productos innovadores.
          \item Cencepción de productos y servicios alrededor de nuevas tecnologías.
          \item Sistema de innovación, redes, infraestructura y servicios. 
          \item Construyendo el equipo e iniciando el proceso de ingeniería.
          \item Manejo de la propiedad intelectual.
        \end{enumerate}
    \end{enumerate}
\end{enumerate}

Este grupo de habilidades son las que marcan diferencia con las otras asignaturas del plan de estudio ya que como se mencionó anteriormente, la mayoría de los cursos no contemplan la implementación de sistemas reales donde se apliquen los conocimientos que se intentan transmitir. Debido a esto, es importante recalcar el papel de los ingenieros en la sociedad, la facultad de ingeniería de la universidad nacional tiene como parte de sus objetivos:

\begin{itemize}

 \item Crear y asimilar críticamente el conocimiento en los campos avanzados de las ciencias, la técnica, la tecnología, el arte y la filosofía.

 \item Estudiar y analizar los problemas nacionales y proponer, con independencia, formulaciones y soluciones pertinentes, convirtiéndose así en conciencia crítica de la nación.

 \item Hacer partícipes de los beneficios de su actividad académica e investigativa a los sectores sociales que conforman la nación Colombiana.

%  \item Contribuir mediante la cooperación con otras universidades e instituciones del Estado a la promoción y al fomento del acceso a la educación superior de calidad.
 
%  \item Participar en empresas, corporaciones mixtas u otras formas organizativas, en orden al mejor cumplimiento de los objetivos y funciones de la universidad.
\end{itemize}

Como establecimos en el primer capítulo de este trabajo, el problema actual de la industria electrónica (relacionada con el diseño digital) en Colombia es el atraso y desactualización de las metodologías de diseño y fabricación, originado por la falta de personal caificado en el manejo de nuevas tecnologías y metodologías. Por esta razón, es importante que los estudiantes conozcan la realidad de este sector y sean concientes de su responsabilidad en la solución de sus problemas.

Como estudiantes pueden contribuir a difundir los resultados de su actividad académica proporcionando información que pueda ser utilizada por quien este interesado en adquirir conocimientos relacionados con el diseño digital; por esto, una de las actividades que se desarrollan en estas asignaturas es la documentación del proceso de diseño de un problema específico que deben resolver grupos de trabajo, esta metodología y esta información se almacena en el portal público \textit{linuxencaja} y puede ser utilizada por quien esté interesado.

Una parte vital en el proceso de enseñanza es el uso de metodologías de diseño para la creación de soluciones a problemas específicos, por esta razón se trabaja con la misma metodología en los tres cursos y se explican los beneficios de usar todas sus etapas; esto con el objetivo de crear buenos habitos de diseño en elos estudiantes. A diferencia de otras asignaturas en esta línea es necesario implementar físicamente las soluciones propuestas, se resalta que la simualción es un paso importante del proceso de diseño pero no es punto final. El uso de plataformas con recursos limitados para la implementación física hace que los estudiantes optimicen la arquitectura de sus diseños y aprendan a buscar alternativas más económicas pero que cumplan con los requerimientos del sistema. El problema a solucionar es formulado por el equipo de trabajo y ellos deben proporcionar las especificaciones del sistema que resolverá este problema, los estudiantes poseen libertad total en la funcionalidad del mismo, lo que ayuda a la creación de habilidades en la definición de funciones y arquitecturas. 

Con esto se espera que el estudiante sea conciente de la situación del país y que sienta la necesidad de crear nuevos productos que ayuden a solucionar un problema específico y de paso ayudar a la creación de empleo creando y comercializando nuevos productos diseñados localmente.

\subsection{Competencias de las Habilidades CDIO 2 y 3}
La tabla \ref{compet_2_3} muestra las competencias IEU para las \textit{aptitudes personales y profesionales} de las tres asignaturas del área de electrónica digital.

\begin{center}
  \begin{table}[H]
    \begin{tabular}{|l|c|c|c|} \hline
      \multicolumn{4}{|c|}{\textbf{Competencias de las habilidades CDIO nivel 2 y 3}}                 \\ \hline 
      \multirow{2}{*}{\textbf{APTITUDES PERSONALES Y PROFESIONALES}} & \multicolumn{3}{c|} {Nivel 1}          \\
                                                       & E. Dig1 & E. Dig2 & Sist. Emb. \\ \hline 
      \textbf{\textit{Planteamiento y resolución de problemas de ingeniería}} & \multicolumn{3}{c|} {EU}       \\ \hline
	1 Identificación y formulación del problema    & \multicolumn{3}{c|} {EU}       \\ \hline
	2 Modelamiento                                 & \multicolumn{3}{c|} {EU}       \\ \hline
	3 Solución y recomendación                     & \multicolumn{3}{c|} {EU}       \\ \hline
      \textbf{\textit{Experimentación y descubrimiento de conocimiento}} & \multicolumn{3}{c|} {U}       \\ \hline
        4 Formulación de hipótesis                     & \multicolumn{3}{c|} {U}        \\ \hline
        5 Investigación experimental                   & \multicolumn{3}{c|} {U}        \\ \hline
      \textbf{\textit{Pensamiento sistemático}}        & \multicolumn{3}{c|} {EU}       \\ \hline
        6 Pensamiento global                           & \multicolumn{3}{c|} {U}        \\ \hline
        7 Surgimiento e interacciones                  & \multicolumn{3}{c|} {U}        \\ \hline
      \textbf{\textit{Habilidades y actitudes personales}}   & \multicolumn{3}{c|} {U}       \\ \hline
        8 Pensamiento creativo                         & \multicolumn{3}{c|} {IEU}      \\ \hline
        9 Pensamiento crítico                          & \multicolumn{3}{c|} {IEU}      \\ \hline
        10 Toma de conciencia de conocimientos propios & \multicolumn{3}{c|} {IEU}      \\ \hline
        11 Curiosidad y aprendizaje permanente         
      \textbf{\textit{Habilidades y actitudes profesionales}} & \multicolumn{3}{c|} {U} \\ \hline%         \begin{enumerate}
        12 Ética profesional, integridad, responsabilidad & \multicolumn{3}{c|} {U}     \\ \hline
        13 Comportamiento profesional                  & \multicolumn{3}{c|} {U}        \\ \hline
        39 Confianza y lealtad                         & \multicolumn{3}{c|} {IEU}       \\ \hline
      \multirow{2}{*}{\textbf{HABILIDADES INTERPERSONALES}} & \multicolumn{3}{c|} {Nivel 1}          \\
                                                       & E. Digital1 & E. Digital1 & Sist. Emb. \\ \hline 
      \textbf{\textit{Equipo de trabajo}}              & \multicolumn{3}{c|} {EU}       \\ \hline
        14 Formar grupos efectivos                     & EU & U & U                     \\ \hline
        15 Equipo de liderazgo                         & EU & U & U                     \\ \hline
        40 Equipo Técnico y Multi-disciplinario        & EU & U & U                     \\ \hline
      \textbf{\textit{Comunicaciones estructuradas}}   & \multicolumn{3}{c|} {EU}       \\ \hline
        16 Estrategia de comunicación                  & EU & U & U                     \\ \hline
        17 Estructura de la comunicación               & EU & U & U                     \\ \hline
        18 Comunicación Escrita                        & EU & U & U                     \\ \hline
        19 Comunicación Electrónica                    & EU & U & U                     \\ \hline
        20 Presentación Oral                           & EU & U & U                     \\ \hline
      \textbf{\textit{Comunicación en Idioma Extranjero}} & \multicolumn{3}{c|} {U}     \\ \hline
        21 Inglés                                      & \multicolumn{3}{c|} {U}        \\ \hline
      \textbf{\textit{Comunicaciones Informales: Relacionarse con los demás}} & \multicolumn{3}{c|} {U}       \\ \hline 
        41 Preguntar, Escuchar y Dialogar              & EU & U & U                     \\ \hline
        42 Negociación, compromiso y resolución de conflictos & EU & U & U              \\ \hline
        43 Establecimiento de conexiones               & IEU& U & U                     \\ \hline
    \end{tabular}
  \caption{Competencias para los niveles 2 y 3 CDIO} \label{compet_2_3} 
  \end{table}
\end{center}

\subsection{Competencias de las Habilidades C.D.I.O. Sistemas en el contexto Empresarial, Social y Ambiental - Innovación}
La tabla \ref{compet_4} muestra las competencias IEU para las \textit{C.D.I.O. Sistemas en el contexto Empresarial, Social y Ambiental - Innovación} de las tres asignaturas del área de electrónica digital.


\begin{center}
  \begin{table}[H]
    \begin{tabular}{|l|c|c|c|} \hline
      \multirow{2}{*}{\textbf{HABILIDADES CDIO}}              & \multicolumn{3}{c|} {Nivel 1}          \\
                                                              & E. Digital1 & E. Digital1 & Sist. Emb. \\ \hline 
      \textbf{\textit{Contexto Externo, Social, Económico y Ambiental}} & \multicolumn{3}{c|} {IEU}        \\ \hline
        22 Rol y responsabilidad de los Ingenieros               & \multicolumn{3}{c|} {IEU}     \\ \hline
        23 Impacto sobre la sociedad y el medio ambiente         & \multicolumn{3}{c|} {IEU}     \\ \hline
        24 Cuestiones y valores actuales                         & \multicolumn{3}{c|} {IEU}     \\ \hline
        44 Sostenibilidad y necesidad de un desarrollo sostenible& IE & IE & IE                  \\ \hline
      \textbf{\textit{Empresa y contexto empresarial}}           & \multicolumn{3}{c|} {EU}         \\ \hline
        25 Interesados en la empresa, metas y objetivos          & \multicolumn{3}{c|} {I}       \\ \hline
        26 Espíritu Empresarial Técnico                          & \multicolumn{3}{c|} {I}       \\ \hline
        27 Trabajo exitoso en organizaciones                     & \multicolumn{3}{c|} {I}       \\ \hline
        45 Finanzas y Economía de los Proyectos de Ingeniería    & IE & IE & IE                  \\ \hline
      \textbf{\textit{Concepción y Administración de Sistemas en Ingeniería.}} & \multicolumn{3}{c|} {IEU}        \\ \hline
        28 Entender las necesidades y establecer las metas       & IEU & EU & U                  \\ \hline
        29 Definir la función, concepto y arquitectura           & IEU & EU & U                  \\ \hline
      \textbf{\textit{Diseño}}                                   & \multicolumn{3}{c|} {IEU}        \\ \hline
        30 Proceso de Diseño                                     & IEU & EU & U                  \\ \hline
        31 Fases del proceso de Diseño y enfoques                & IEU & EU & U                  \\ \hline
        32 Utilización de conocimiento científico en el diseño   & IEU & EU & U                  \\ \hline
        33 Diseño específico                                     & IEU & EU & U                  \\ \hline   
        34 Diseño multi-disciplinario                            & I   & E  & U                  \\ \hline
      \textbf{\textit{Implementación}}                           & \multicolumn{3}{c|} {EU}         \\ \hline
        35 Proceso de fabricación Hardware                       & IE  & EU & U                  \\ \hline   
        36 Proceso de Implementación de Software                 & I   & EU & U                  \\ \hline  
        37 Integración Software - Hardware                       & I   & EU & U                  \\ \hline  
        38 Pruebas, verificación, validación y certificación     & IE  & EU & U                  \\ \hline  
    \end{tabular}
  \caption{Competencias para CDIO} \label{compet_4} 
  \end{table}
\end{center}


Como puede verse en la tabla \ref{compet_4} el componente distintivo del plan de estudios propuesto es el nivel de competencias de las habilidades relacionadas con diseño e implementación; en casi todas ellas se utilizan estas habilidades, lo que significa que se realizarán actividades que impliquen diseño e implementación de sistemas digitales utilizando tecnología de punta y técnicas de diseño y fabricación modernas; lo que es imprescindible si se espera que nuestros profesionales lideren esfuerzos que deriven en la creación de empresas y de nuevos productos bienes y servicios.


\section{Integración de las Habilidades CDIO al Plan de Estudios}

\subsection{Metodología de diseño}

El proceso de diseño de un Sistema Embebido comienza con la {\textit{especificaci\'on del sistema}} (ver figura \ref{design_method}), en este punto se describe la funcionalidad y se definen las restricciones f\'{\i}sicas, el\'ectricas y econ\'omicas. Esta especificaci\'on debe ser muy general y no deben existir dependencias (tecnol\'ogicas, metodol\'ogicas) de ning\'un tipo, se suele utilizar lenguajes de alto nivel, como UML, C++ para realizar la descripción. La especificaci\'on puede ser verificada a trav\'es de una serie de pasos de an\'alisis cuyo objetivo es determinar la validez de los algor\'{\i}tmos seleccionados, por ejemplo, determinar si el algoritmo siempre termina, los resultados satisfacen las especificaciones. Desde el punto de vista de la re-utilizaci\'on, algunas partes del funcionamiento global deben tomarse de
una librer\'{\i}a de algor\'{\i}tmos existentes.

\begin{figure}[H]
  \begin{center} \includegraphics[scale=.8]{./images/habilidades_digitales.png} \end{center}
  \caption{Metodología de Diseño para el área de Sistemas Digitales} \label{design_method}
\end{figure}

Una vez definidas las especificaciones del sistema se debe realizar un modelamiento que permita extraer de estas la funcionalidad. El modelamiento es crucial en el diseño ya que de \'el depende el paso existoso de la especificaci\'on a la implementaci\'on. Es importante definir que modelo matem\'atico debe soportar el entorno de diseño. Los modelos m\'as utilizados son: m\'aquinas de estados finitos, diagramas de flujos de datos, sistemas de eventos discretos y redes de petri. Cada modelo posee propiedades matem\'aticas que pueden explotarse de forma eficiente para responder preguntas sobre la funcionalidad del sistema sin llevar a cabo dispendiosas tareas de verificaci\'on. \ Todo modelo obtenido debe ser verificado para comprobar que cumple con las restricciones del sistema. 

Una vez se ha obtenido el modelo del sistema se procede a determinar su {\textit{arquitectura}}, esto es, el n\'umero y tipo de componentes y su inter-conexi\'on. Este paso no es m\'as que una exploraci\'on del espacio de diseño en b\'usqueda de soluciones que permitan la implementaci\'on de una funcionalidad dada, y puede realizarse con varios criterios en mente: costos, confiabilidad, viabilidad comercial. Las opciones de implementacion que se estudiarán son:

\begin{itemize}
\item Componente HW y SW integrado en un dispositivo semiconductor (SoC): En la actualidad existen muchas compañías que fabrican procesadores de 32 bits integrados a una gran variedad de periféricos, lo cual simplifica el diseño y reduce costos. Este tipo de implementación es muy popular en los dispositivos de consumo masivo (reproductores de MP3, consolas de juego, etc), debido a los grandes niveles de producción resulta más económico contar con un dispositivo que integre el mayor número de funcionalidades, esto disminuye el costo de componentes, el área de circuito impreso.

\item Componente SW en un SoC y componente HW en un dispositivo lógico programable (PLD): Cuando no existen en el mercado un SoC con la cantidad de periféricos requerida para una determinada aplicación, o con una funcionalidad específica, es necesario recurrir a la utilización de dispositivos comerciales que implementen dicha operación; en algunas ocaciones el periférico puede realizar funciones poco comúnes y no se proporciona comercialmente, por lo que es necesario implementar esta funcionalidades en una FPGA y conectarla al SoC de tal forma que este la vea como uno más de sus periféricos.

\item Componente SW y HW en una FPGA: Esta es tal vez la opción más flexible, pero la de menor desempeño, ya que al utilizar los recursos lógicos de la FPGA para la implementación del procesador (softcore) la longitud de los caminos de interconexión entre los bloques lógicos aumentan el retardo de las señales, lo cual disminuye la máxima velocidad de funcionamiento. Los procesadores \textit{softcore} más populares en la actualidad son:

  \begin{itemize}
  \item Microblaze y Picoblaze de Xilinx.
  \item NIOS de Altera.
  \item Leon de Gaisler Research.
  \item LatticeMico32 (LM32) de Lattice Semiconductors.
  \item OpenRisc de opencores.
  \end{itemize}

De los anteriores procesadores el Leon, el LM32 y el Openrisc proporcionan el código fuente en un lenguaje de descripción de hardware, los de las empresas Xilinx y Altera entregan un código a nivel de compuertas que no permite su estudio y modificación; por esats razones y debido a que no se necesita una FPGA con mucha capacidad lógica en estos cursos se trabajará con el LM32 de Lattice.

\end{itemize}

Utilizando como base la arquitectura obtenida en el paso anterior las tareas del modelo del sistemas son mapeadas dentro de los componentes. Esto es, asignaci\'on de funciones a los componentes de la arquitectura. Existen dos opciones a la hora de implementar las tareas o procesos: 
\begin{enumerate}
  \item Implementaci\'on software: La tarea se va a ejecutar en un procesador ya sea el del SoC o el softcore LM32.
  \item Implementaci\'on hardware: La tarea se va a ejecutar en un sistema digital dedicado implementado en un PLD.
\end{enumerate}

Para cumplir las especificaciones del sistema algunas tareas deben ser implementadas en hardware, esto con el f\'{\i}n de no ocupar al procesador en tareas c\'{\i}clicas, un ejemplo t\'{\i}pico de estas tareas es la generaci\'on de bases de tiempos. La decisi\'on de que tareas se implementan en SW y que tareas se implementan en HW recibe el nombre de {\textit{particionamiento}}, esta selecci\'on es fuertemente dependiente de restricciones econ\'omicas y temporales.

Las tareas software deben compartir los recursos que existan en el sistema (procesador y memoria), por lo tanto se deben hacer decisiones sobre el orden de ejecuci\'on y la prioridad de estas. Este proceso recibe el nombre de {\textit{planificaci\'on}}. En este punto del diseño el modelo debe incluir informaci\'on sobre el mapeo, el particionamiento y la planificaci\'on del sistema.

Las siguientes fases corresponden a la implementaci\'on del modelo, para esto las tareas hardware deben ser llevadas al dispositivo elegido (ASIC o FPGA) y se debe obtener el $''$ejecutable$''$ de las tareas software, este proceso recibe el nombre de {\textit{s\'{\i}ntesis}} HW y SW respectivamente, as\'{\i} mismo se deben sintetizar los mecanismos de comunicaci\'on.

El proceso de prototipado consiste en la realizaci\'on f\'{\i}sica del sistema, esto es, la fabricación de la placa de circuito impreso, el montaje de los componentes y la fabricación de la caja. Finalmente, el sistema f\'{\i}sico debe someterse a pruebas para verificar que se cumplen con las especificaciones iniciales y con las normas propias de su aplicación. Como puede verse en el flujo de diseño existen realimentaciones que permiten depurar el resultado de pasos anteriores en el caso de no cumplirse con las especificaciones iniciales.

Esta metodología de diseño se utilizará en todos los cursos de la línea, pero se utilizarán diferentes opciones de implementación en los diferentes cursos, como se puede apreciar en la figura \ref{design_method}; en electrónica digital 1 solo se implementarán tareas hardware en una FPGA, esto con el fín de enseñar al estudiante los conceptos básicos de la electrónica digital, y el uso de máquinas de estado algorítmicas para la implementación de tareas hardware; en electrónica digital 2 se estudiará la arquitectura de los SoC (utilizando el LM32 de lattice) se utilizarán las herramientas de compilación GNU para escribir las tareas software y se crearán periféricos que implementen tareas hardware y finalmente se estudiarán las diferentes formas de comunicación entre las tareas hardware y software; finalmente en el curso sistemas embebidos, se utilizará un SoC comercial junto con la cadena de herramientas GNU y el sistema operativo Linux para estudiar la arquitectura y programación de los sistemas embebidos modernos.


\subsection{Objetivo General}
Generar en el estudiante las habilidades necesarias para concebir, diseñar, implementar y operar sistemas digitales complejos que satisfagan necesidades de la sociedad y proporcionar un canal para la transferencia de tecnología y conocimiento a la Industria Colombiana. 

\subsubsection{Electrónica Digital 1}
Concebir y definir las especificaciones y requerimientos de un sistema digital, modelar su funcionamiento, y realizar la implementación siguiendo la metodología de diseño de sistemas embebidos utilizando únicamente tareas hardware.

\subsubsection{Electrónica Digital 2}
Concebir, definir las especificaciones, modelar, diseñar un sistema digital siguiendo la metodología de diseño de sistemas embebidos y realizar su implementación óptima utilizando tareas hardware (implementadas en un PLD) y tareas software (que se ejecutan en un procesador).

\subsubsection{Sistemas Embebidos}
Concebir, diseñar, e implementar un sistema digital complejo utilizando la metodología de diseño de sistemas embebidos, un SoC comercial y un sistema operativo para su implementación.

\subsection{Objetivos Específicos}

\subsection {Ojbetivos comúnes}
\begin{itemize}
 \item Identificar las especificaciones funcionales del sistema, su arquitectura de alto nivel y definir su descomposición en elementos
 \item Explicar las actividades en las etapas del proceso de diseño, 
 \item Desarrollar el pensamiento sistémico.
 \item Modelar funcionalmente sistemas digitales.
 \item Diseñar pruebas para comprobar el correcto funcionamiento de los sistemas implementados.
 \item Leer y entender material técnico escrito en inglés.
 \item Implementar un sistemas embebido (hardware o hardware/software) para cumplir una tarea determinada que cumpla con una necesidad real (Obtener e interpretar las necesidades del consumidor) utilizando técnicas, herramientas y procesos adecuados.
 \item Estudiar y aplicar el concepto de la re-utilización de código.
 \item Desarrollar trabajo en equipo incluyendo presentaciones, describiendo los diversos roles y responsabilidades.
 \item Documentar los diseños realizados para crear una base de datos que contribuya a la difusión del conocimiento adquirido.
\end{itemize}

\subsubsection{Electrónica Digital 1}
\begin{itemize}
 \item Estudiar las fases de la metodología de diseño para sistemas embebidos.
 \item Estudiar los dominios de diseño estructural, funcional y físico. 
 \item Estudiar los lenguajes de descripción de hardware.
 \item Estudiar los componentes básicos de la lógica combinatoria y secuencial.
 \item Estudio de las máquinas de estado algorítmicas.
\end{itemize}

\subsubsection{Electrónica Digital 2}
\begin{itemize}
 \item Estudiar los requisitos para un particionamiento Hardware / Software óptimo.
 \item Estudiar la arquitectura de un procesador, micro-arquitectura, set de instrucciones, interrupciones, direccionamiento, memorias.
 \item Estudiar el proceso de implementación de tareas software.
 \item Estudiar la integración Software-Hardware.
 \item Diseñar pruebas para comprobar el correcto funcionamiento de los sistemas implementados.
\end{itemize}

\subsubsection{Sistemas Embebidos}
\begin{itemize}
 \item Realizar aplicaciones que requieran diseño multi-disciplinario.
 \item Estudiar y realizar el proceso de fabricación hardware.
 \item Estudiar el principio básico de los sistemas operativos.
 \item Describir la integración de software en hardware electrónico
 \item Entender diagramas de circuitos electrónicos de sistemas digitales, identifcar sus componentes y su función.
 \item Estudiar diseños software y hardware existentes para entender su funcionamiento, arquitectura y adquirir experiencia en el diseño.
 \item Hacer parte de listas de discusión de temas técnicos que usen el inglés como lenguaje.
 \item Utilizar medios electrónicos para documentar procesos de diseño.
\end{itemize}

Con estos objetivos se busca que al cursar todas las asignaturas del área el estudiante adquiera los conocimientos que se resumen en la figura \ref{ES_education}.

\begin{figure}[htpb]
   \begin{center} \includegraphics[scale=.51]{./images/ES_CDIO_flow.png}   \end{center}
    \caption{Educación de sistemas embebidos. Tomada de:\cite{HMHK09} y modificada} \label{ES_education}
 \end{figure}

% \subsection{Contenido}
% 
% \subsubsection{Electrónica Digital 1}
% \begin{itemize}
%  \item \textbf{Flujo de Diseño de Sistemas Embebidos}
%      \begin{itemize}
%        \item Sistemas Digitales: Panorama Y Perspectiva 
%        \item Metodología de Diseño
%        \item Representaciones de Diseño y Niveles de Abstracción
%      \end{itemize}
%  \item \textbf{Sistemas Numéricos y Operaciones Aritméticas}
%      \begin{itemize}
%        \item Representación de Datos
%        \item Sistemas numéricos: Binario, Octal Hexadecimal
%        \item Representación de números negativos
%        \item Algoritmos para la implementación de operaciones aritméticas
%        \begin{itemize}
%          \item Camino de Datos
%          \item Control
%        \end{itemize}
%      \end{itemize}
%  \item \textbf{Lógica Combinatoria}
%      \begin{itemize}
%       \item Definición.
%       \item Ecuaciones Booleanas, Formas canónicas.
%       \item Módulos Básicos: Multiplexores, codificadores, sumadores, restadores comparadores.
%      \end{itemize}
%  \item \textbf{Lógica Secuencial}
%      \begin{itemize}
%       \item Definición
%       \item Elementos de memoria:
%         \begin{itemize}
%         \item Latch
%         \item Flip-Flop
%         \end{itemize}
%       \item Bloques básicos
%         \begin{itemize}
%         \item Registros
%         \item Acumuladores
%         \item Contadores
%         \end{itemize}
%       \item Máquina de Estados Finitos (FSM)
%         \begin{itemize}
%         \item Arquitectura
%         \item Tipos: Mealy, Moore
%         \item Diagramas de Estado
%         \item Síntesis de Máquinas de Estado
%         \end{itemize}
%       \item Máquinas de Estado Algorítmicas (ASM)
%         \begin{itemize}
%         \item Tareas Hardware
%         \item Componentes: Camino de Datos y Máquina de Control
%         \item Implementación de operaciones aritméticas utilizando ASM
%         \item Identificación, funcionamiento e interfaz de bloques constructores.
%         \item Interacción entre el Camino de Datos y la Máquina de Control
%         \item Lenguajes de Descripción de Hardware
%         \end{itemize}
%      \end{itemize}
%  \item \textbf{Tecnologías de Implementación}
%      \begin{itemize}
%       \item Familia Lógica CMOS
%         \begin{itemize}
%         \item Principio de funcionamiento, consumo de potencia
%         \item Niveles Lógicos y márgenes de ruido
%         \item Retardos, Manejo de Corriente
%         \item Compuertas tri-estado y Open-Drain
%         \end{itemize}
%       \item Dispositivos Lógicos Programables
%         \begin{itemize}
%          \item Arreglos Lógicos Programables (PALs)
%          \item Dispositivos Lógicos Programables (PLDs, CPLDs)
%          \item Arreglo de Compuertas Programable en Campo (FPGA)
%          \item Flujo de Diseño - Programación en Sistema
%         \end{itemize}
%      \end{itemize}
%  \item \textbf{Introducción a los procesadores}
%      \begin{itemize}
%       \item Máquina de Estados Algorítmica Programable
%      \end{itemize}
% \end{itemize}
% 
% 
% \subsubsection{Electrónica Digital 2}
% 
% \begin{itemize}
%  \item \textbf{Codiseño Hardware-Software}
%     \begin{itemize}
%      \item Flujo de Diseño y Particionamiento HW/SW.
%      \item Comunicación SW -> HW (Direccionamiento)
%      \item Comunicación HW -> SW (Interrupciones)
%      \item Componentes de un Sistema etherogéneo.
%       \begin{itemize}
%         \item Procesador
%         \item Buses
%         \item Periféricos
%         \item Memorias
%       \end{itemize}
%     \end{itemize}
%  \item \textbf{Arquitectura de Procesadores}
%     \begin{itemize}
%      \item Micro-Arquitectura
%      \item Set de Instrucciones
%      \item Modos de direccionamiento
%      \item Interrupciones
%      \item Pipeline
%     \end{itemize}
% 
%  \item \textbf{Implementacion de Tareas Hardware}
%     \begin{itemize}
%      \item Arquitectura de computadores
%      \begin{itemize}
%        \item CPU
%        \item Memorias
%        \item Periféricos
%        \item Mapa de Memoria
%        \item Controlador de Interrupciones Programable
%      \end{itemize}
%      \item Definición de la Interfaz HS <-> SW
%      \item Implementación de Tareas Hardware en Periféricos.
%     \end{itemize}
% 
%  \item \textbf{Flujo de Diseño Software}
%     \begin{itemize}
%      \item Cadena de Herramientas: 
%      \begin{itemize}
%        \item Compilador
%        \item Librerías standard
%        \item Depurador
%        \item Utilidades binarias
%        \item Código de Inicio C RunTime crt0
%        \item Herramienta \textit{make}
%      \end{itemize}
%      \item Integración del Software sobre hardware Electrónico.
%        \begin{itemize}
%         \item Ejecución en Memoria Interna
%         \item Ejecución en Memoria Externa: Bootloaders
%        \end{itemize}
%      \item Implementación de tareas software y comunicación con tareas Hardware.
%      \end{itemize}
%  \item \textbf{Sistemas Sobre Silicio}
%     \begin{itemize}
%      \item Arquitectura
%     \end{itemize}
% \end{itemize}
% 
% \subsubsection{Sistemas Embebidos}
% \begin{itemize}
%  \item \textbf{Sistemas Embebidos}
%     \begin{itemize}
%      \item Definición,aplicaciones
%      \item Metodología de Diseño
%      \item Arquitectura
%        \begin{itemize}
%           \item Sistema Sobre Silicio
%           \item Circuitos de Referencia
%        \end{itemize}
%     \end{itemize}
%      \item Iniclialización
%        \begin{itemize}
%           \item Métodos de arranque
%           \item Bootloaders
%        \end{itemize}
%  \item \textbf{Sistema Operativo Linux}
%     \begin{itemize}
%      \item Arquitectura
%      \item Sincronización entre procesos
%      \item Estructura del Kernel y Organización del código fuente
%      \item Drivers de Dispositivos y módulos del kernel
%      \item Imágen del kernel
%      \item Inicialización del Kernel
%     \end{itemize}
%  \item \textbf{Sistema de Archivos del root}
%     \begin{itemize}
%      \item Tipos de Sistema de Archivos
%      \item Estructura del Sistema de Archivos del root
%      \item Archivos de configuración y niveles de ejecución.
%      \item Montaje del sistema de archvios del root
%     \end{itemize}
%  \item \textbf{Interfaz con dispositivos externos al SoC}
%     \begin{itemize}
%      \item Control utilizando señales de Entrada/Salida de propósito general (GPIOs)
%      \item Utilizando puertos de comunicaciones UART, I2C, SPI, USB.
%      \item Utilizando el controlador de memorias externas del SoC
%     \end{itemize}
%  \item \textbf{Interfaz con Periféricos Dedicados Implementados en PLDs}
%     \begin{itemize}
%      \item Configuración del PLD utilizando GPIOs del SoC
%      \item Definición de la Interfaz HW y SW
%      \item Comunicación con periféricos dedicados
%     \end{itemize}
% \end{itemize}

\subsection{Metodología}
Todas las actividades que se realizarán en estos cursos están encamindas a generar habilidades necesarias para concebir, diseñar, e implementar sistemas digitales complejos, y están articuladas alrededor de una única metodología de diseño. Los tres cursos tienen un carácter teórico-práctico, el componente teórico tratará los diferentes temas de forma general, con el fín de no crear dependencia con las herramientas utilizadas (lo que permitirá realizar actualizaciónes de forma fácil). En el componente práctico se tratarán temas específicos de manejo de las herramientas (lenguajes de descripción de hardware, lenguajes de programación, manejo de plataformas de desarrollo) y como estas se relacionan con la metodología de diseño utilizada.

El estudiante debe estudiar, profundizar y comprobar algunos temas tratados en clase y debe leer previamente la documentación que se encuentra disponible en el sitio web de los cursos. Adicionalmente, debe formar grupos de trabajo para realizar actividades a lo largo del semestre.

Durante el semestre se trabajará para definir las especificaciones, diseñar e implementar un dispositivo que resuelva una determinada necesidad (con la complejidad adecuada para cada curso), en la sesión teórica se tratarán aspectos relacionados con la concepción, diseño, identificación y definición de las funciones de los componentes del sistema, mientras que en el laboratorio se tratarán temas relacionados con la implementación de dichos componentes sobre PLDs o SoC. Se deben realizar presentaciones del avance, indicando las razones que se tuvieron en cuenta en cada decisión y somo se resolvieron los problemas encontrados, todo este proceso debe documentarse en la wiki del portal \textit{linuxencaja}, esto último para formar un banco de proyectos que pueda ser utilizado como referencia por quien este interesado.

\subsubsection{SIE: Plataforma abierta para el desarrollo de sistemas embebidos}
En el mercado existe una gran variedad de plataformas que pueden ser utilizadas en el estudio de sistemas embebidos, sin embargo, no todas son adecuadas para la implementación del método que proponemos ya que la plataforma que se utilice debe proporcionar toda la información necesaria para poder entenderla, programarla, replicarla y modificarla; esto con el fin de proporcionar al estudiante una herramienta que pueda ser utilizada en el desarrollo de nuevos productos comerciales, para que se cumplan estas condiciones se requiere: acceso a los esquemáticos y a los archivos de fabricación del PCB con posibilidad de modificación; acceso a la documentación completa del proceso de fabricación; acceso a la cadena de producción; utilización de herramientas abiertas para su programación; un PLD para la implementación de tareas HW; un procesador para la implementación de tareas SW; un canal de comunicación entre el procesador y el PLD; y una comunidad que desarrolle aplicaciones para dicha plataforma y que proporcione medios para el intercambio de información a través de listas de correo y wikis.

Después de una búsqueda minuciosa no se encontraron plataformas que cumplieran con estas condiciones, en especial con las relacionadas con el proceso de diseño y de producción, esto es normal, ya que la mayoría de las empresas no quieren que se fabriquen sus plataformas y los proyectos individuales no poseen la infraestructura necesaria para la producción masiva. Por este motivo, se decidió crear una plataforma que cumpliera con los requerimientos (plataforma \textit{SIE}), pudiera ser utilizada en los tres cursos del área y e convirtiera en una herramienta más para la difusión de los conocimientos adquiridos en este estudio a quien se encuentre interesado.

La Figura \ref{SIE_arch} muestra el diagrama de bloques de la plataforma SIE, en ella podemos encontrar un procesador que posee periféricos para comunicación serial (UART), memorias micro-SD, un puerto I2C, un LCD a color de 3 pulgadas, 2 entradas y salidas de audio stereo, 2 entradas análogas; una FPGA que proporciona 25 señales de entrada/salida digitales de propósito general (GPIOs) y controla un conversor análogo digital de 8 canales. Existen dos canales de comunicación entre la FPGA y el procesador: uno para controlar el puerto JTAG, lo que permite la configuración de la FPGA desde el procesador (lo que elimina la necesidad de cables de programación); y otro que proporciona el bus de datos, dirección y control para comunicarse con las tareas HW o periféricos implementadas en la FPGA. El procesador utilizado es un Ingenic JZ4725 (MIPS) corriendo a 400MHz, se dispone de una memoria NAND de 2GB para almacenamiento de datos y programas, así como de una memoria SDRAM de 32 MB, lo que permite la ejecución de una gran variedad de aplicaciones Linux.

 \begin{figure}[htpb]
   \begin{center} \includegraphics[scale=.45]{./images/SIE_block_diagram.png}   \end{center}
    \caption{Estructura de la plataforma de desarrollo SIE} \label{SIE_arch}
 \end{figure}


SIE proporciona un canal de comunicación y alimentación a través del puerto USB-device, y es configurado para ser utilizado como una interfaz de red (\textit{usb0}), permitiendo la transferencia de archivos y ejecución de una consola remota utilizando el protocolo \textit{ssh}; este canal de comunicación también se utiliza para programar la memoria NAND no volátil, por lo que para realizar la programación completa de los componentes de la plataforma solo es necesario un cable USB. SIE posee un sistema de archivos basado en el proyecto \textit{openwrt} y dispone de una gran cantidad de aplicaciones y librerías que pueden ser compiladas en un computador tradicional, siguiendo las instrucciones contenidas en la wiki del proyecto.


\subsection{Integración de SIE con los cursos de la línea de electrónica digital}
En la actualidad SIE está siendo utilizada en los cursos de arquitectura de computadores y sistemas embebidos de la Universidad Nacional de Colombia sede Bogotá, la metodología utilizada se centra en la realización de un proyecto durante el período académico, los estudiantes deben realizar el proceso de concepción, diseño e implementación de una aplicación que da solución a un determinado problema, cada grupo integrado por tres estudiantes está encargado de llevar una \textit{bitácora} del proyecto en la wiki servidor del portal \textit{linuxencaja}, incluyendo toda la información generada durante el proceso de diseño (diagramas de flujo, diagramas de bloque, simulaciones) el único requisito es la construcción de una placa hija (diseñada en la herramienta abierta Kicad) con la funcionalidad que se le desea dar a la plataforma SIE.

\subsubsection{Electrónica digital 1}
En el primer curso del área de diseño digital en la UNAL se realiza el estudio, diseño e implementación de máquinas de estado algorítmicas utilizando la metodología de diseño presentada anteriormente y la herramienta gratuita de Xilinx \textit{Webpack}, los estudiantes implementarán sus diseños utilizando lenguajes de descripción de hardware (VHDL, verilog), como resultado de este proceso se obtendrán 3 archivos uno con extensión \textbf{.bit} que se utiliza para configurar a la FPGA con la funcionalidad deseada; un archivo con extensión \textbf{pad.csv} que indica la función asignada por el diseñador a todos los pines de la FPGA; y un archivo con extensión \textbf{.vcd} que contiene los resultados de la simulación del sistema \footnote{Este archivo lo generan las herramientas de simulación abiertas \textit{icarus} y \textit{ghdl} }. SIE proporciona un canal de comunicación entre el procesador y el puerto JTAG de la FPGA que puede ser utilizado para: 

\begin{itemize}
 \item Configuración: Carga del archivo con extensión \textbf{.bit} con la funcionalidad deseada a la FPGA; este archivo puede ser transferido a la FPGA utilizando el cable usb y el protocolo de comunicaciones ssh, cuando este archivo de configiración se encuentre en el sistema de archivos de SIE se puede utilizar la aplicación \textit{xc3sprog} para configurar la FPGA.

 \item Prueba a baja frecuencia: Como mencionamos anteriormente, el protocolo JTAG permite la aplicación de vectores de prueba a un dispositivo semiconductor y la recolección de la respuesta a estos estímulos utilizando 4 señales (TDI, TDO, TMS, TCK). 
\end{itemize}

Una aplicación (propia y abierta) que tiene como entrada los archivos que contienen la información de los pines (pad.csv) y los resultados de la simulación (ver figura \ref{hw_design_flow}) extrae la información necesaria para aplicar los vectores de prueba al circuito implementado en la FPGA y capturar su respuesta a estos estímulos \footnote{para el control del puerto JTAG se modificó la herramienta \textit{urjtag}}, utilizando la instrucción INTEST del protocolo JTAG. Los resultados de esta prueba son graficados en el LCD de SIE y pueden ser exportados a un archivo tipo imágen; esta herramienta puede verse como una combinación de un analizador lógico y un generador de vectores de prueba de bajo costo. Con esto, se proporcionan las herramientas necesarias para realizar todas las etapas del flujo de diseño con solo una plataforma.

 \begin{figure}[htpb]
   \begin{center} \includegraphics[scale=.75]{./images/HW_design_flow.pdf}   \end{center}
    \caption{Flujo de diseño hardware} \label{hw_design_flow}
 \end{figure}

De forma intensional SIE no cuenta con memorias, displays de 7 segmentoso conectores conectados a la FPGA; experiencias con el manejo de las plataformas de desarrollo que poseen una gran cantidad de periféricos indican que los estudiantes no adquieren habilidades necesarias para la lectura de esquemáticos ni de hojas de especificaciones de componentes al utilizarlas, ya que normalmente se suministran ejemplos funcionales que son utilizados por los estudiantes; la falta de este tipo de recursos en SIE obliga a los estudiantes a investigar sobre la adecuada conexión de estos componentes y a la construcción de una tarjeta hija que implemente la funcionalidad deseada.

\subsubsection{Electrónica digital 2}
Como se mencionó anteriormente, en este curso se busca que el estudiante entienda la diferencia entre tareas hardware y software, y los canales de comunicación entre ellas; para esto se implementarán las tareas software en el procesador \textit{softcore} LM32 de Lattice (o cualquiera con el código fuente disponible); para esto, es necesario estudiar la arquitectura de la unidad de procesamiento, su set de instrucciones, manejo de interrupciones, comunicación con las memorias de datos y de instrucciones y su forma de programación. El código fuente facilita el estudio de las operaciones internas del procesador al permitir el seguimiento de señales específicas, a manera de ejemplo en la figura \ref{char_write} se muestra el acceso a una memoria externa para tipos de datos \textit{unsigned char}

 \begin{figure}[htpb]
   \begin{center} \includegraphics[scale=.75]{./images/char_write.png}   \end{center}
    \caption{Simualción del acceso de datos a memaria externa en un procesador mips} \label{char_write}
 \end{figure}

Este tipo de simualciones permiten entender perfectamente conceptos relacionados con el funcionamiento del sistema (diferencia de tipos de datos en este ejemplo) lo que no es posible realizar si se utilizan dispositivos comerciales en el aprendizaje de la arquitectura de computadores ya que los simuladores existentes se enfocan en el contenido del banco de registros y en la memoria y no pueden mostrar (hasta el momento) las señales internas. Pero, ¿Porqué no implementar un procesador propio para la realización de este estudio? esta metodologia se utilizó en el pasado en muchos cursos de arquitectura de computadores y es utilizada en la actualidad, su principal desventaja radica en la falta de herramientas para realizar la programación de estas nuevas arquitecturas, por lo que es necesario programarlas en lenguaje de máquina lo que resulta ser muy tedioso aún para aplicaciones sencillas. 


 \begin{figure}[htpb]
   \begin{center} \includegraphics[scale=.5]{./images/soft_SoC_design_flow.pdf}   \end{center}
    \caption{Flujo de diseño hardware/software al utilizar un procesador \textit{softcore}} \label{soft_SoC_design_flow}
 \end{figure}


La metodología que proponemos aquí permite utilizar la cadena de herramientas GNU existente para el procesador LM32, esta cadena de herramientas permite trabajar con lenguaje ensamblador, C y C++ y proporciona un flujo de diseño software que puede ser utilizado otros procesadores comerciales. En la figura \ref{soft_SoC_design_flow} se muestra el flujo de diseño al utilizar un procesador \textit{softcore}; con él, el estudiante puede entender que el flujo de diseño software se utiliza para generar el contenido de la memoria de programa del SoC y que la estructura del procesador se describe en un lenguaje de descripción de hardware al que se le aplica el mismo flujo de diseño que aplicó en la asignatura anterior.

En este curso se implementarán tareas hardware en forma de periféricos utilizando los conocimientos en la asignatura electrónica digital 1, se estudiarán las diferentes opciones de comunicación entre la CPU y los periféricos y se darán las bases del particionamiento óptimo Hardware - software. 


Una pregunta válida en este punto (y ya ha sido realizada por los estudiantes) es: ¿Cuando se enseñará el manejo de microcontroladores y microprocesadores comerciales? La pregunta es muy importante ya que estos dispositivos son muy utilizados y en una gran gama de aplicaciones no es necesario utilizar complejos SoC. La respuesta a la pregunta es que no es necesario enseñar el manejo de estos dispositivos ya que con los conocimientos adquiridos en este curso se cuenta con la información necesaria para que los estudiantes puedan hacerlo por ellos mismos; experiencias con los estudiantes del DIEE de la UNAL muestran que gracias a que la cadena de herrmientas de compilación GNU soportan una gran variedad de procesadores de 8, 16 y 32 bits, es posible cambiar de CPU de forma fácil y si el código fué escrito de forma adecuada, utilizarlo con pequeñas modificaciones en diferentes procesadores.

En el repositorio del proyecto SIE \footnote{git clone http://projects.linuxencaja.net/SIE} se puede obtener el código fuente en verilog para el procesador de lattice LM32, se suministran los archivos necesarios para el desarrollo de aplicaciones software utilizando la cadena de herramientas GNU y los archivos para realizar la simulación del softcore utilizando \textit{ghdl} e \textit{icarus verilog}, lo que permite realizar modificaciones en la arquitectura del procesador, permitiendo la creación de nuevas instrucciones y co-procesadores. Adicionalmente, se proporcionan herramientas que inicializan las memorias internas de los procesadores softcore con el código generado por la cadena de compilación. En este curso se estudia la arquitectura de un sistema sobre silicio (SoC) y los estudiantes deben concebir, diseñar e implementar un periférico dedicado, conectarlo al SoC y escribir el código en C que lo controla e implementa la funcionalidad. La FPGA de SIE posee recursos limitados, lo que obliga a los estudiantes a optimizarlos y a buscar en el mercado circuitos integrados que les permita cumplir con la funcionalidad requerida, construir una tarjeta hija y montar estos componentes.

En este curso el procesador ingenic de la plataforma SIE es utilizado como herramienta de configuración de la FPGA, los archivos \textit{.bit} son transferidos al sistema de archivos de SIE utilizando el protocolo \textit{ssh} y desde allí son transferidos a la FPGA utilizando \textit{xc3sprog} o \textit{urjtag}. Es posible comunicar el procesador LM32 implementado en la FPGA con el procesador Ingenic utilizando sus puertos seriales, lo que proporciona un canal de depuración para las aplicaciones que se ejecutan en la FPGA; suministrando, todas las herramientas necesarias para la realización de las actividades.

\subsection{Sistemas Embebidos}
QI hardware, proporciona las herramientas software necesarias para el desarrollo de aplicaciones software en los procesadores MIPS de Ingenic JZ4720/25/40; en la actualidad existen aplicaciones abiertas para: programar las memorias no volátiles \textit{usbboot}; inicializar la plataforma y cargar la imágen de linux. \textit{u-boot} crear la imágen del kernel de Linux; crear un sistema de archivos \textit{openwrt}; crear instaladores de un gran número de aplicaciones \textit{opkg-openwrt}; desarrollo software utilizando librerías gráficas como QT o GTK. \textit{openwrt}.

SIE utiliza un procesador JZ4725 y tiene una arquitectura compatible con el producto de QI-hardware \textit{BEN NANONOTE}, por esta razón, todo el desarrollo realizado para BEN es aplicable a SIE, esto garantiza el mantenimiento, actualización y disponibilidad del software necesario para el desarrollo de aplicaciones.

En este curso se utiliza el procesador MIPS para ejecutar tareas de visualización, comunicación, control e interfaz con el usuario. Se utilizan librerías gráficas de alto nivel como QT (de Nokia) para realizar la interfaz, se desarrollan módulos del kernel y programas en espacio de usuario para el control de periféricos dedicados (implementados en la FPGA). Con esto se proporciona a los estudiantes herramientas que están siendo utilizadas en la actualidad por los grandes fabricantes de dispositivos digitales como Nokia, Dell, Hewlett Packard. 

La figura \ref{hw_sw_interface} muestra la arquitectura de la etapa de comunicación entre el procesador y la FPGA, las señales \textit{DATA, NCS2, we0\_n, address} provenientes del procesador no se encuentran en fase con la señal de reloj de la FPGA, por lo que deben ser sincronizadas con este; (el módulo SYNC se encarga de esta tarea). Debido a que no se pueden implementar buses tri-estado en el interior de la FPGA (sólo se pueden utilizar en los pines de la FPGA), por esta razón, los periféricos deben tener dos buses de datos uno de entrada (Color Naranja) y otro de salida (color verde). Se debe proporcionar un circuito a la salida de los buses de los periféricos que permita el paso de la información del periférico seleccionado (en la figura se representa este elemento como un Multiplexor). Debido a que la FPGA es mucho más rápida que el procesador, es necesario generar un pulso con la duración de un ciclo de reloj de la FPGA para la señal de escritura \textit{we0\_n}; esto se hace para evitar que se realice más de una operación de escritura (esta tarea es realizada por el módulo Write Pulse Generator, en la figura puede verse el diagrama de tiempos que representa su funcionamiento). Un buffer tri-estado debe controlar el acceso al bus de Datos, este buffer debe presentar un estado de alta impedancia cuando no se selecciona ningún periférico o cuando se realiza una operación de escritura y debe permitir el paso de información desde el periférico seleccionado en las operaciones de lectura. 

%  \begin{figure}[htpb]
%    \begin{center} \includegraphics[scale=.45]{./images/Sw_hw_fpga_arch.png}   \end{center}
%     \caption{Interfaz HW-SW en SIE} \label{hw_sw_interface}
%  \end{figure}













Se utilizarán los siguientes métodos de calificación: 
\begin{itemize}
 \item Pruebas escritas donde se verificará la asimiliación de conocimiento.
 \item Sustentación oral de procesos de diseño e Implementación.
 \item Evaluación del avance del proceso de Concepción, Diseño e Implementación del Proyecto Final.
\end{itemize}

\subsection{Actividades}

\subsubsection{Lectura de material del curso 10, 11}
Con la lectura previa de los temas, el estudiante adquiere la capacidad de absorber conocimiento (11), identificar sus preferenicas, deficiencias y buscar ayuda para suplirlas (10), lo cual ayuda al mejoramiento de las habilidades para el auto-aprendizaje, uno de los problemas detectados en los estudiantes es la necesidad de una autoridad que le proporcione la información que necesita para resolver un problema o tomar una decisión.

\subsubsection{Lectura de material Técnico en Inglés 10, 11, 6, 30, 33, 21}
La mayor parte de la documentación de los componentes electrónicos esta escrita en inglés técnico, es necesario que el estudiante aprenda a entender este tipo de escritura y se familiarice con su estructura. Esto le permite identificar el funcionamiento de un componente del sistema (6,30), determinar que componente se adapta mejor a sus necesidades (33) y mejorar sus habilidades para comunicarse en inglés 21.

\subsubsection{Utilización de Metodologías de Diseño 1, 2, 3, 6, 7, 9, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38}

La metodología de diseño(30,31,) de sistemas embebidos requiere identificar un problema(1, 28), plantear una solución(3,29,32) lógica (9) de alto nivel (9), modelarla (2) a nivel de sistema(6), verificar el cumplimiento de los requerimientos(33,38). Proporciona métodos para determinar su arquitectura óptima (particionamiento HW/SW) y definir la función e interacción(37,7) de sus componentes software (36) y hardware (35).

\subsubsection{Implementación de Sistemas Digitales Sencillos 3, 14, 29, 30, 35, 36, 17, 18, 19}

 La realización de prácticas de laboratorio en las que grupos de trabajo (14) implementan diseños de baja o media complejidad le permite al estudiante: Formular recomendaciones (3) para que no se repitan errores en experiencias futuras. Utilizar sistemas de desarrollo (30) para la implementación de tareas HW y SW a bajo nivel (36). Con el fin de mejorar la capacidad de comunicación escrita (18, 19) se deben presentar informes que refuercen las habilidades generadas en la utilización de la metodología de diseño, por lo que se deben tener la siguiente estructura(17): 
\begin{itemize}
 \item Un diagrama de caja negra que indique las entradas y salidas del sistema.
 \item Una descripción de alto nivel del algoritmo que implementa la solución   (29).
 \item Un diagrama de bloques que indique el particionamiento y la interconexión entre sus componentes (30).
 \item Descripciones de alto nivel de cada uno de los componentes (31).
 \item La implementación y simulación de cada componente y del sistema completo (35), donde se muestre que el sistema cumple con las especificaciones funcionales(38)
\end{itemize}

\subsubsection{Proyecto Final 1,2,3, 14, 15, 30, 31, 32, 33, 34, 35, 22, 23, 24, 25, 27}
Durante el semestre se trabajará para definir las especificaciones(1,2,3), diseñar(30,31,32,33,34) e implementar un dispositivo que resuelva una hipotética necesidad de la sociedad (22) (con la complejidad adecuada para cada curso), en la sesión teórica se tratarán aspectos relacionados con la concepción, diseño, Identificación y definición de las funciones de los componentes del sistema, mientras que en el componente práctico, los relacionados con la implementación de dichos componentes sobre PLDs o SoC.

A los estudiantes se les hace una descripción funcional de alto nivel del sistema, ellos deben organizarse en grupos de trabajo (14,15), definir la función de cada uno de estos grupos (27,14,31), establecer estrategias de comunicación (16,31), realizar y/o cumplir un cronograma de actividades (25,31) que permitan resolver la necesidad en el tiempo especificado (22). Una de las estrategias de comunicación es la realización de presentaciones orales (20), en las que cada equipo de trabajo expondrá el estado de su sub-proyecto, indicando las razones que se tuvieron en cuenta en cada decisión y como se resolvieron los problemas encontrados (24). Adicionalmente todo este proceso debe documentarse en el sitio web del curso (wiki) con el objetivo de crear una base de proyectos que permitan a futuros estudiantes utilizar la experiencia obtenida (23) y en un determinado caso dar continuidad al proyecto. 

El estudiante debe diseñar y construir placas de circuito impreso con los circuitos necesarios para su aplicación (35) siguiendo las normas de diseño establecidas por el fabricante (resolución, número de capas, costo) y las restricciones del circuito (Capacidad de corriente, niveles de ruido, compatibilidad electromagnética, etc).

Vale la pena aclarar que durante el primer curso los estudiantes no poseen la experiencia necesaria para realizar (sin asistencia) labores como la división de tareas, generación de un cronograma de actividades y  fijar la estrategia de comunicación, razón por la cual el docente debe acompañar este proceso.

\subsubsection{Participación en listas de discución 21}
Con el objeto de aumentar las capacidades en la comunicación en idioma extranjero, se alentará a los estudiantes a que hagan parte de listas de discusión en diferentes temas técnicos, algunos problemas que encontrarán en la realización de las diferentes prácticas deben ser consultados en estas listas para encontrar una forma de solución


\subsection{Plataforma de Desarrollo SIE}

La plataforma SAKC fué diseñada para ser utilizada como herramienta de implementación para los tres cursos de esta área. Está compuesta (ver Figura \ref{sakc_block}) por una FPGA y un Procesador, lo que permite la implementación de tareas Hardware y Software utilizando únicamente la FPGA o el procesador y la FPGA.

\begin{figure}[h]
  \begin{center} \includegraphics[scale=.8]{./images/SAKC_block_diagram.png} \end{center}
  \caption{Diagrama de Bloques de la Plataforma de Desarrollo SAKC}\label{sakc_block}
\end{figure}

Durante el primer curso, el procesador de la plataforma se utilizará para configurar a la FPGA con las tareas hardware sitetizadas por los estudiantes. esta plataforma carece (intencionalmente) de elementos comunmente utilizados en las plataformas de desarrollo para PLDs como Pulsadores, Leds, Displays o conectores espaciales, lo que obliga a los estudiantes a investigar la forma de conexión de estos y a construir circuitos que permitan la conexión de la plataforma con estos elementos de interfaz con el usuario o con otros sistemas.

\begin{figure}[h]
  \centering
    \mbox{
      \subfigure[Big]{\includegraphics[scale=.5]{./images/SAKC.png}}
      \subfigure[Small]{\includegraphics[scale=.5]{./images/SAKC_LCD.png}}
    }
  \caption{Plataforma de Desarrollo SAKC}
  \label{sakc}
\end{figure}

La capacidad de la FPGA de SAKC permite la implementación de procesadores soft-core (como plasma y microblaze), posibilitando la implementación de tareas Hadware y software en ella. El procesador será utilizado al finalizar el curso para comparar el desempeño (velocidad, consumo de potencia, costo) entre un procesador soft-core y un procesador comercial.

El ultimo curso utilizará el procesador para la ejecución de tareas software y la FPGA para ejecutar las tareas Software, se hará uso de herramientas utilizadas actualmente en el diseño de Aplicaciones comerciales de multinacionales como Nokia (QT), Motorola (Linux).


\subsubsection{Hardware y Software Copy-Left}
El conocimiento debe ser considerado un bien común y se debe garantizar el acceso a todo el mundo. Por esta razón SAKC proporciona la documentación necesaria para:

\begin{itemize}
 \item Estudiar. entender, y reproducir o modificar su Arquitectura.
 \item Conocer su proceso de fabricación.
 \item Entender su funcionamiento global y la interacción de sus componentes.
 \item Estudiar tutoriales que explican su programación.
 \item Descargar, estudiar y modificar el código fuente de todas las aplicaciones existentes actualmente.
 \item Realizar consultas con los creadores de las aplicaciones y de las plataforma de desarrollo.
 \item Contribuir a mejorar la calidad de la documentación y crear nueva información.
\end{itemize}

SAKC esta distribuido bajo la licencia Creative Commons \textit{(CC) BY - SA}, la que permite la distribución y modificación del diseño (incluso para aplicaciones comerciales), con el único requisito de que los productos derivadas deben tener la misma licencia.


\section{Desarrollo de Métodos de Evaluación}




% 6. Evaluation is the making of judgments about the value, for some purpose, of ideas, works, solutions,
% methods, material, etc. It involves the use of criteria and standards for appraising the extent to which
% particulars are accurate, effective, or satisfying. It may be quantitative or qualitative.
% Verb examples that represent intellectual activity on this level include: assess, defend, evaluate.
%          Examples from the Syllabus:
%              Assess one?s skills, interests, strengths and weaknesses
%              Evaluate supporting evidence
% A way in which to view the structure of the Bloom verbs is shown in Table B1, which gives the six
% levels, and identifies three to five key verbs within each level. Some common synonyms for those key
% verbs are also listed. Verbs in Italics of Table B1 are commonly used Bloom verbs, and those in regular
% font were added to better fit with technically oriented topics of the Syllabus. The verbs in the column
% to the far right of Table B1 are commonly used Bloom verbs that we recommend not be used with the
% Syllabus. This is because the verbs either appear at two levels, and therefore are ambiguous, or
% because they have a technical connotation apart from their common meaning, which causes them to be
% misplaced in terms of level. Entries in bold will be used in the Bloom verb patterns discussed below.
%                                                       B-3
% B.2 The Affective Domain
% The affective domain relates to the emotional component of learning. It emphasizes a feeling, tone, an
% emotion, or a degree of acceptance or rejection. Affect encompasses a range from simple attention to
% organization and characterization of complex, but internally consistent, qualities of character and
% conscience. Krathwohl, Bloom and Masia (1964) developed five levels in the affective domain.
% 1. Receiving (attending): Receiving speaks to an awareness that a learner is conscious of something,
% that he/she take into account a situation, phenomenon or state of affairs. It also addresses the
% learner's willingness to receive information. In other words the climate must be set so that students
% attention is grabbed and directed in a particular manner.
% Verb examples which represent intellectual activity on this level include: a s k , accept, hold.
%         Examples from the Syllabus:
%              Accepts the need for a commitment to service
%              Accepts the goals and roles of the engineering profession
% 2. Responding: At the responding level, students are sufficiently motivated that they are not just
% willing to attend, but are actively attending. It involves a continuum from acquiescence in responding,
% to willingness to respond, to satisfaction in response. In other words, it is active participation by the
% students in their own learning.
% Verb examples that represent intellectual activity on this level include: answer, assist, discuss.
%         Examples from the Syllabus:
%              Discuss the motivation for continued self-education
%              Discuss the importance of both a depth and breadth of knowledge
% 3. Valuing: Simply put, something has value or worth. At this level, behavior is sufficiently
% consistent and stable as to be characterized as a belief or attitude. The student is perceived as holding
% a value. This level ranges from acceptance of a value, to preference, to commitment to a value.
% Verb examples that represent intellectual activity on this level include: demonstrate a belief in,
% embrace, follow, join, share, value.
%         Examples from the Syllabus:
%              Embrace one?s responsibility for self improvement
%              Value a willingness to work independently
% 4. Organization refers to the process learners go through after they internalize values and are faced
% with situations for which more than one value is relevant. This necessitates the organization of values
% into a system, determining the relationship among them, and establishing dominant and pervasive
% values. The emphasis is on comparing, relating, and synthesizing values.
% Verb examples that represent intellectual activity on this level include: alter, combine, complete,
% integrate, order, organize, relate, synthesize .
%                                                     B-4
%         Example from the Syllabus:
%              Integrate the potential benefits and risks of an action
% 5. Characterization by a value or value complex: At this level the individual acts consistently in
% accordance with the values he/she has internalized. A behavior is pervasive, consistent, predictable,
% and characteristic of the student. Student beliefs, ideas, and attitudes are integrated into a total
% philosophy or view of the world.
% Verb examples that represent intellectual activity on this level include: discriminate, display,
% influence, presuppose, qualify, resolve, solve, verify.
%         Example from the Syllabus:
%              Resolves conflicting issues in the balance between personal and professional life
% B.3 The Psychomotor Domain
% The psychomotor domain emphasizes physical skills. It involves muscular or motor skill, some
% manipulation of materials and objects, or some act which requires a neuromuscular coordination. It
% captures the complexity of grace, strength, and speed that is often involved in physical activity or
% skill acquisition.
% While there are a few examples in the CDIO Syllabus that touch on the psychomotor domain, these
% topics all have an important cognitive component as well. Therefore the cognitive verbs are
% consistently used for these topics, and the psychomotor categories are not used in the Syllabus.
% For completeness, it is worth outlining the breakdown of this domain by Simpson (1972) into seven
% levels.
% 1.   Perception is defined as the ability to use sensory cues to guide motor activity.
% 2. Set refers to the readiness to take a particular course of action.         This includes physical and
% emotional set as well as mental.
% 3. Guided Response: refers to imitation and trial and error in which the adequacy of the performance
% is judged by the instructor or by a defined set of criteria.
%  4. Mechanism: describe learned responses that have become habitual, movements can be performed
% with some confidence and proficiency.
%  5. Complex Overt Responses: is the skillful performance of motor acts that involve complex movement
%  patterns. Proficiency is indicated by a quick, accurate, and highly coordinated performance, requiring
%  a minimum of energy. In this category, responses are automatic.
% 6. Adaptation: is the level at which skills are so well developed that the individual can modify
% movement patterns to fit special requirements or to meet a problem situation.
%  7. Origination is the creation of new movement patterns to fit a particular situation or specific
% problem. Outcomes at this level emphasize creativity based upon highly developed skills.







